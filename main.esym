F N "_" 0 33 ""
D G "__PCH__" 0 33 ""5.078""
D G "__DEVICE__" 0 33 "4520"
D G "__DATE__" 0 33 ""23-FEB-22""
D G "__TIME__" 0 33 ""09:28:37""
D G "_UNICODE" 0 33 ""?""
D G "__EVAL" 0 33 ""?"" "Standard Header file for the PIC18F4520 device ////////////////"
c L "set_tris_a" 2 3 6 "FUNCTION"
f N "set_tris_a" 2 43 ""
v L "value" 2 43 "int8" `55 
f B "set_tris_a" 2 43 "void(int8 value)" `54 
f N "set_tris_b" 2 44 ""
v L "value" 2 44 "int8" `57 
f B "set_tris_b" 2 44 "void(int8 value)" `56 
f N "set_tris_c" 2 45 ""
v L "value" 2 45 "int8" `59 
f B "set_tris_c" 2 45 "void(int8 value)" `58 
f N "set_tris_d" 2 46 ""
v L "value" 2 46 "int8" `61 
f B "set_tris_d" 2 46 "void(int8 value)" `60 
f N "set_tris_e" 2 47 ""
v L "value" 2 47 "int8" `63 
f B "set_tris_e" 2 47 "void(int8 value)" `62 
f N "get_tris_a" 2 48 ""
f B "get_tris_a" 2 48 "int8()" `64 
f N "get_tris_b" 2 49 ""
f B "get_tris_b" 2 49 "int8()" `65 
f N "get_tris_c" 2 50 ""
f B "get_tris_c" 2 50 "int8()" `66 
f N "get_tris_d" 2 51 ""
f B "get_tris_d" 2 51 "int8()" `67 
f N "get_tris_e" 2 52 ""
f B "get_tris_e" 2 52 "int8()" `68 
f N "output_a" 2 53 ""
v L "value" 2 53 "int8" `70 
f B "output_a" 2 53 "void(int8 value)" `69 
f N "output_b" 2 54 ""
v L "value" 2 54 "int8" `72 
f B "output_b" 2 54 "void(int8 value)" `71 
f N "output_c" 2 55 ""
v L "value" 2 55 "int8" `74 
f B "output_c" 2 55 "void(int8 value)" `73 
f N "output_d" 2 56 ""
v L "value" 2 56 "int8" `76 
f B "output_d" 2 56 "void(int8 value)" `75 
f N "output_e" 2 57 ""
v L "value" 2 57 "int8" `78 
f B "output_e" 2 57 "void(int8 value)" `77 
f N "input_a" 2 58 ""
f B "input_a" 2 58 "int8()" `79 
f N "input_b" 2 59 ""
f B "input_b" 2 59 "int8()" `80 
f N "input_c" 2 60 ""
f B "input_c" 2 60 "int8()" `81 
f N "input_d" 2 61 ""
f B "input_d" 2 61 "int8()" `82 
f N "input_e" 2 62 ""
f B "input_e" 2 62 "int8()" `83 
f N "input_change_a" 2 63 ""
f B "input_change_a" 2 63 "int8()" `84 
f N "input_change_b" 2 64 ""
f B "input_change_b" 2 64 "int8()" `85 
f N "input_change_c" 2 65 ""
f B "input_change_c" 2 65 "int8()" `86 
f N "input_change_d" 2 66 ""
f B "input_change_d" 2 66 "int8()" `87 
f N "input_change_e" 2 67 ""
f B "input_change_e" 2 67 "int8()" `88 
f N "port_b_pullups" 2 68 ""
v L "value" 2 68 "int8" `90 
f B "port_b_pullups" 2 68 "void(int8 value)" `89 
f N "input" 2 69 ""
v L "pin" 2 69 "int16" `92 
f B "input" 2 69 "int8(int16 pin)" `91 
f N "input_state" 2 70 ""
v L "pin" 2 70 "int16" `94 
f B "input_state" 2 70 "int8(int16 pin)" `93 
f N "output_low" 2 71 ""
v L "pin" 2 71 "int16" `96 
f B "output_low" 2 71 "void(int16 pin)" `95 
f N "output_high" 2 72 ""
v L "pin" 2 72 "int16" `98 
f B "output_high" 2 72 "void(int16 pin)" `97 
f N "output_toggle" 2 73 ""
v L "pin" 2 73 "int16" `100 
f B "output_toggle" 2 73 "void(int16 pin)" `99 
f N "output_bit" 2 74 ""
v L "pin" 2 74 "int16" `102 
v L "level" 2 74 "int8" `103 
f B "output_bit" 2 74 "void(int16 pin,int8 level)" `101 
f N "output_float" 2 75 ""
v L "pin" 2 75 "int16" `105 
f B "output_float" 2 75 "void(int16 pin)" `104 
f N "output_drive" 2 76 ""
v L "pin" 2 76 "int16" `107 
f B "output_drive" 2 76 "void(int16 pin)" `106  "Constants used to identify pins in the above are:"
d G "PIN_A0" 2 80 "31744"
d G "PIN_A1" 2 81 "31745"
d G "PIN_A2" 2 82 "31746"
d G "PIN_A3" 2 83 "31747"
d G "PIN_A4" 2 84 "31748"
d G "PIN_A5" 2 85 "31749"
d G "PIN_A6" 2 86 "31750"
d G "PIN_A7" 2 87 "31751"
d G "PIN_B0" 2 89 "31752"
d G "PIN_B1" 2 90 "31753"
d G "PIN_B2" 2 91 "31754"
d G "PIN_B3" 2 92 "31755"
d G "PIN_B4" 2 93 "31756"
d G "PIN_B5" 2 94 "31757"
d G "PIN_B6" 2 95 "31758"
d G "PIN_B7" 2 96 "31759"
d G "PIN_C0" 2 98 "31760"
d G "PIN_C1" 2 99 "31761"
d G "PIN_C2" 2 100 "31762"
d G "PIN_C3" 2 101 "31763"
d G "PIN_C4" 2 102 "31764"
d G "PIN_C5" 2 103 "31765"
d G "PIN_C6" 2 104 "31766"
d G "PIN_C7" 2 105 "31767"
d G "PIN_D0" 2 107 "31768"
d G "PIN_D1" 2 108 "31769"
d G "PIN_D2" 2 109 "31770"
d G "PIN_D3" 2 110 "31771"
d G "PIN_D4" 2 111 "31772"
d G "PIN_D5" 2 112 "31773"
d G "PIN_D6" 2 113 "31774"
d G "PIN_D7" 2 114 "31775"
d G "PIN_E0" 2 116 "31776"
d G "PIN_E1" 2 117 "31777"
d G "PIN_E2" 2 118 "31778"
d G "PIN_E3" 2 119 "31779"
d G "FALSE" 2 122 "0"
d G "TRUE" 2 123 "1"
d G "BYTE" 2 125 "int8"
d G "BOOLEAN" 2 126 "int1"
d G "getc" 2 128 "getch"
d G "fgetc" 2 129 "getch"
d G "getchar" 2 130 "getch"
d G "putc" 2 131 "putchar"
d G "fputc" 2 132 "putchar"
d G "fgets" 2 133 "gets"
d G "fputs" 2 134 "puts"
c L "output_drive" 2 3 3 "FUNCTION"
f N "restart_cause" 2 139 ""
f B "restart_cause" 2 139 "int8()" `108 
f N "reset_cpu" 2 140 ""
f B "reset_cpu" 2 140 "void()" `109 
f N "sleep" 2 141 ""
f B "sleep" 2 141 "void()" `110 
f N "sleep" 2 142 ""
v L "type" 2 142 "int8" `112 
f B "sleep" 2 142 "void(int8 type)" `111  "Constants returned from RESTART_CAUSE() are:"
d G "WDT_TIMEOUT" 2 144 "7"
d G "MCLR_FROM_SLEEP" 2 145 "11"
d G "MCLR_FROM_RUN" 2 146 "15"
d G "NORMAL_POWER_UP" 2 147 "12"
d G "BROWNOUT_RESTART" 2 148 "14"
d G "WDT_FROM_SLEEP" 2 149 "3"
d G "RESET_INSTRUCTION" 2 150 "0"
d G "SLEEP_FULL" 2 153 "0" "Default"
d G "SLEEP_IDLE" 2 154 "1" "Clock and peripherals don't stop"
c L "sleep" 2 3 5 "FUNCTION"
f N "setup_timer_0" 2 161 ""
v L "mode" 2 161 "int8" `114 
f B "setup_timer_0" 2 161 "void(int8 mode)" `113 
f N "set_timer0" 2 162 ""
v L "value" 2 162 "int16" `116 
f B "set_timer0" 2 162 "void(int16 value)" `115 
f N "get_timer0" 2 163 ""
f B "get_timer0" 2 163 "int16()" `117 
f N "setup_counters" 2 164 ""
v L "mode" 2 164 "int8" `119 
v L "prescaler" 2 164 "int8" `120 
f B "setup_counters" 2 164 "void(int8 mode,int8 prescaler)" `118 
f N "set_rtcc" 2 165 ""
v L "value" 2 165 "int16" `122 
f B "set_rtcc" 2 165 "void(int16 value)" `121 
f N "get_rtcc" 2 166 ""
f B "get_rtcc" 2 166 "int16()" `123  "Constants used for SETUP_TIMER_0() are:"
d G "T0_INTERNAL" 2 168 "0"
d G "T0_EXT_L_TO_H" 2 169 "32"
d G "T0_EXT_H_TO_L" 2 170 "48"
d G "T0_DIV_1" 2 172 "8"
d G "T0_DIV_2" 2 173 "0"
d G "T0_DIV_4" 2 174 "1"
d G "T0_DIV_8" 2 175 "2"
d G "T0_DIV_16" 2 176 "3"
d G "T0_DIV_32" 2 177 "4"
d G "T0_DIV_64" 2 178 "5"
d G "T0_DIV_128" 2 179 "6"
d G "T0_DIV_256" 2 180 "7"
d G "T0_OFF" 2 182 "0x80"
d G "T0_8_BIT" 2 184 "0x40"
d G "RTCC_INTERNAL" 2 188 "0"
d G "RTCC_EXT_L_TO_H" 2 189 "32"
d G "RTCC_EXT_H_TO_L" 2 190 "48"
d G "RTCC_DIV_1" 2 191 "8"
d G "RTCC_DIV_2" 2 192 "0"
d G "RTCC_DIV_4" 2 193 "1"
d G "RTCC_DIV_8" 2 194 "2"
d G "RTCC_DIV_16" 2 195 "3"
d G "RTCC_DIV_32" 2 196 "4"
d G "RTCC_DIV_64" 2 197 "5"
d G "RTCC_DIV_128" 2 198 "6"
d G "RTCC_DIV_256" 2 199 "7"
d G "RTCC_OFF" 2 200 "0x80"
d G "RTCC_8_BIT" 2 201 "0x40"
c L "get_rtcc" 2 3 8 "FUNCTION"
f N "setup_wdt" 2 212 ""
v L "mode" 2 212 "int16" `125 
f B "setup_wdt" 2 212 "void(int16 mode)" `124 
f N "restart_wdt" 2 213 ""
f B "restart_wdt" 2 213 "void()" `126  "Constants used for SETUP_WDT() are:"
d G "WDT_ON" 2 215 "0x100"
d G "WDT_OFF" 2 216 "0"
d G "WDT_4MS" 2 218 "0x300"
d G "WDT_8MS" 2 219 "0x500"
d G "WDT_16MS" 2 220 "0x700"
d G "WDT_32MS" 2 221 "0x900"
d G "WDT_64MS" 2 222 "0xB00"
d G "WDT_128MS" 2 223 "0xD00"
d G "WDT_256MS" 2 224 "0xF00"
d G "WDT_512MS" 2 225 "0x1100"
d G "WDT_1S" 2 226 "0x1300"
d G "WDT_2S" 2 227 "0x1500"
d G "WDT_4S" 2 228 "0x1700"
d G "WDT_8S" 2 229 "0x1900"
d G "WDT_16" 2 230 "0x1B00"
d G "WDT_32S" 2 231 "0x1D00"
d G "WDT_64S" 2 232 "0x1F00"
d G "WDT_128S" 2 233 "0x2100"
c L "restart_wdt" 2 3 3 "FUNCTION"
f N "setup_timer_1" 2 238 ""
v L "mode" 2 238 "int16" `128 
f B "setup_timer_1" 2 238 "void(int16 mode)" `127 
f N "get_timer1" 2 239 ""
f B "get_timer1" 2 239 "int16()" `129 
f N "set_timer1" 2 240 ""
v L "value" 2 240 "int16" `131 
f B "set_timer1" 2 240 "void(int16 value)" `130  "Constants used for SETUP_TIMER_1() are:"
d G "T1_DISABLED" 2 243 "0"
d G "T1_INTERNAL" 2 244 "0x85"
d G "T1_EXTERNAL" 2 245 "0x87"
d G "T1_EXTERNAL_SYNC" 2 246 "0x83"
d G "T1_CLK_OUT" 2 248 "8"
d G "T1_DIV_BY_1" 2 250 "0"
d G "T1_DIV_BY_2" 2 251 "0x10"
d G "T1_DIV_BY_4" 2 252 "0x20"
d G "T1_DIV_BY_8" 2 253 "0x30"
c L "set_timer1" 2 3 3 "FUNCTION"
f N "setup_timer_2" 2 258 ""
v L "mode" 2 258 "int8" `133 
v L "period" 2 258 "int8" `134 
v L "postscale" 2 258 "int8" `135 
f B "setup_timer_2" 2 258 "void(int8 mode,int8 period,int8 postscale)" `132 
f N "get_timer2" 2 259 ""
f B "get_timer2" 2 259 "int8()" `136 
f N "set_timer2" 2 260 ""
v L "value" 2 260 "int8" `138 
f B "set_timer2" 2 260 "void(int8 value)" `137  "Constants used for SETUP_TIMER_2() are:"
d G "T2_DISABLED" 2 262 "0"
d G "T2_DIV_BY_1" 2 263 "4"
d G "T2_DIV_BY_4" 2 264 "5"
d G "T2_DIV_BY_16" 2 265 "6"
c L "set_timer2" 2 3 3 "FUNCTION"
f N "setup_timer_3" 2 270 ""
v L "mode" 2 270 "int16" `140 
f B "setup_timer_3" 2 270 "void(int16 mode)" `139 
f N "get_timer3" 2 271 ""
f B "get_timer3" 2 271 "int16()" `141 
f N "set_timer3" 2 272 ""
v L "value" 2 272 "int16" `143 
f B "set_timer3" 2 272 "void(int16 value)" `142  "Constants used for SETUP_TIMER_3() are:"
d G "T3_DISABLED" 2 275 "0"
d G "T3_INTERNAL" 2 276 "0x85"
d G "T3_EXTERNAL" 2 277 "0x87"
d G "T3_EXTERNAL_SYNC" 2 278 "0x83"
d G "T3_DIV_BY_1" 2 280 "0"
d G "T3_DIV_BY_2" 2 281 "0x10"
d G "T3_DIV_BY_4" 2 282 "0x20"
d G "T3_DIV_BY_8" 2 283 "0x30"
d G "T3_CCP1_TO_2" 2 286 "0x48"
d G "T3_CCP2" 2 287 "0x8"
c L "set_timer3" 2 3 4 "FUNCTION"
f N "setup_ccp1" 2 293 ""
v L "mode" 2 293 "int32" `145 
f B "setup_ccp1" 2 293 "void(int32 mode)" `144 
f N "setup_ccp1" 2 294 ""
v L "mode" 2 294 "int32" `147 
v L "pwm" 2 294 "int8" `148 
f B "setup_ccp1" 2 294 "void(int32 mode,int8 pwm)" `146 
f N "set_pwm1_duty" 2 295 ""
v L "value" 2 295 "int16" `150 
f B "set_pwm1_duty" 2 295 "void(int16 value)" `149  "Constants used for SETUP_CCPx() are:"
d G "CCP_OFF" 2 297 "0"
d G "CCP_CAPTURE_FE" 2 298 "0x04"
d G "CCP_CAPTURE_RE" 2 299 "0x05"
d G "CCP_CAPTURE_DIV_4" 2 300 "0x06"
d G "CCP_CAPTURE_DIV_16" 2 301 "0x07"
d G "CCP_COMPARE_SET_ON_MATCH" 2 302 "0x08"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 303 "0x09"
d G "CCP_COMPARE_INT" 2 304 "0x0A"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 305 "0x02"
d G "CCP_COMPARE_RESET_TIMER" 2 306 "0x0B"
d G "CCP_PWM" 2 307 "0x0C"
d G "CCP_PWM_PLUS_1" 2 308 "0x1c"
d G "CCP_PWM_PLUS_2" 2 309 "0x2c"
d G "CCP_PWM_PLUS_3" 2 310 "0x3c"
c L "set_pwm1_duty" 2 3 1 "FUNCTION"
d G "CCP_PWM_H_H" 2 317 "0x0c"
d G "CCP_PWM_H_L" 2 318 "0x0d"
d G "CCP_PWM_L_H" 2 319 "0x0e"
d G "CCP_PWM_L_L" 2 320 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 322 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 323 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 324 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 326 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 327 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 328 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 329 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 330 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 331 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 332 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 334 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 335 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 336 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 338 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 339 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 340 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 342 "0x80000000"
c L "set_pwm1_duty" 2 3 1 "FUNCTION"
f N "setup_ccp2" 2 346 ""
v L "mode" 2 346 "int32" `155 
f B "setup_ccp2" 2 346 "void(int32 mode)" `154 
f N "setup_ccp2" 2 347 ""
v L "mode" 2 347 "int32" `157 
v L "pwm" 2 347 "int8" `158 
f B "setup_ccp2" 2 347 "void(int32 mode,int8 pwm)" `156 
f N "set_pwm2_duty" 2 348 ""
v L "value" 2 348 "int16" `160 
f B "set_pwm2_duty" 2 348 "void(int16 value)" `159 
c L "set_pwm2_duty" 2 3 5 "FUNCTION"
f N "setup_psp" 2 357 ""
v L "mode" 2 357 "int8" `165 
f B "setup_psp" 2 357 "void(int8 mode)" `164 
f N "psp_output_full" 2 358 ""
f B "psp_output_full" 2 358 "int8()" `166 
f N "psp_input_full" 2 359 ""
f B "psp_input_full" 2 359 "int8()" `167 
f N "psp_overflow" 2 360 ""
f B "psp_overflow" 2 360 "int8()" `168  "Constants used in SETUP_PSP() are:"
d G "PSP_ENABLED" 2 362 "0x10"
d G "PSP_DISABLED" 2 363 "0"
c L "psp_overflow" 2 3 3 "FUNCTION"
f N "setup_spi" 2 370 ""
v L "mode" 2 370 "int32" `171 
f B "setup_spi" 2 370 "void(int32 mode)" `170 
f N "spi_write" 2 371 ""
v L "value" 2 371 "int8" `173 
f B "spi_write" 2 371 "void(int8 value)" `172 
f N "spi_read" 2 372 ""
f B "spi_read" 2 372 "int8()" `174 
f N "spi_read" 2 373 ""
v L "value" 2 373 "int8" `176 
f B "spi_read" 2 373 "int8(int8 value)" `175 
f N "spi_data_in" 2 374 ""
f B "spi_data_in" 2 374 "int8()" `177 
f N "setup_spi2" 2 375 ""
v L "mode" 2 375 "int32" `179 
f B "setup_spi2" 2 375 "void(int32 mode)" `178 
f N "spi_write2" 2 376 ""
v L "value" 2 376 "int8" `181 
f B "spi_write2" 2 376 "void(int8 value)" `180 
f N "spi_read2" 2 377 ""
f B "spi_read2" 2 377 "int8()" `182 
f N "spi_read2" 2 378 ""
v L "value" 2 378 "int8" `184 
f B "spi_read2" 2 378 "int8(int8 value)" `183 
f N "spi_data_in2" 2 379 ""
f B "spi_data_in2" 2 379 "int8()" `185  "Constants used in SETUP_SPI() are:"
d G "SPI_DISABLED" 2 381 "0x00"
d G "SPI_MASTER" 2 382 "0x20"
d G "SPI_SLAVE" 2 383 "0x24"
d G "SPI_SCK_IDLE_HIGH" 2 384 "0x10"
d G "SPI_SCK_IDLE_LOW" 2 385 "0x00"
d G "SPI_CLK_DIV_4" 2 386 "0x00"
d G "SPI_CLK_DIV_16" 2 387 "0x01"
d G "SPI_CLK_DIV_64" 2 388 "0x02"
d G "SPI_CLK_T2" 2 389 "0x03"
d G "SPI_SS_DISABLED" 2 390 "0x01"
d G "SPI_XMIT_L_TO_H" 2 392 "0x4000"
d G "SPI_XMIT_H_TO_L" 2 393 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 2 395 "0x0000"
d G "SPI_SAMPLE_AT_END" 2 396 "0x8000"
d G "SPI_L_TO_H" 2 399 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 2 400 "SPI_SCK_IDLE_HIGH"
c L "spi_data_in2" 2 3 2 "FUNCTION"
f N "setup_uart" 2 404 ""
v L "baud" 2 404 "int32" `187 
f B "setup_uart" 2 404 "void(int32 baud)" `186 
f N "setup_uart" 2 405 ""
v L "baud" 2 405 "int32" `189 
v L "stream" 2 405 "int8" `190 
f B "setup_uart" 2 405 "void(int32 baud,int8 stream)" `188 
f N "setup_uart" 2 406 ""
v L "baud" 2 406 "int32" `192 
v L "stream" 2 406 "int8" `193 
v L "clock" 2 406 "int32" `194 
f B "setup_uart" 2 406 "void(int32 baud,int8 stream,int32 clock)" `191 
f N "set_uart_speed" 2 407 ""
v L "baud" 2 407 "int32" `196 
f B "set_uart_speed" 2 407 "void(int32 baud)" `195 
f N "set_uart_speed" 2 408 ""
v L "baud" 2 408 "int32" `198 
v L "stream" 2 408 "int8" `199 
f B "set_uart_speed" 2 408 "void(int32 baud,int8 stream)" `197 
f N "set_uart_speed" 2 409 ""
v L "baud" 2 409 "int32" `201 
v L "stream" 2 409 "int8" `202 
v L "clock" 2 409 "int32" `203 
f B "set_uart_speed" 2 409 "void(int32 baud,int8 stream,int32 clock)" `200  "Constants used in setup_uart() are:"
d G "UART_ADDRESS" 2 413 "2"
d G "UART_DATA" 2 414 "4"
d G "UART_AUTODETECT" 2 415 "8"
d G "UART_AUTODETECT_NOWAIT" 2 416 "9"
d G "UART_WAKEUP_ON_RDA" 2 417 "10"
d G "UART_SEND_BREAK" 2 418 "13"
c L "set_uart_speed" 2 3 3 "FUNCTION"
f N "setup_comparator" 2 422 ""
v L "mode" 2 422 "int32" `205 
f B "setup_comparator" 2 422 "void(int32 mode)" `204  "Constants used in setup_comparator() are:"
d G "A0_A3_A1_A3" 2 424 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 2 425 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 2 426 "0xbcf05"
d G "NC_NC_NC_NC" 2 427 "0x0ff07"
d G "A0_A3_A1_A2" 2 428 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 2 429 "0x9ef01"
d G "A0_VR_A1_VR" 2 430 "0x3ff06"
d G "A3_VR_A2_VR" 2 431 "0xcff0e"
d G "CP1_INVERT" 2 432 "0x0000010"
d G "CP2_INVERT" 2 433 "0x0000020"
c L "setup_comparator" 2 3 2 "FUNCTION"
f N "setup_vref" 2 440 ""
v L "mode" 2 440 "int8" `209 
f B "setup_vref" 2 440 "void(int8 mode)" `208  "Constants used in setup_vref() are:"
d G "VREF_LOW" 2 442 "0xa0"
d G "VREF_HIGH" 2 443 "0x80"
d G "VREF_F5" 2 445 "0x40"
d G "VREF_COMP" 2 446 "0x10"
c L "setup_vref" 2 3 2 "FUNCTION"
f N "setup_low_volt_detect" 2 450 ""
v L "mode" 2 450 "int8" `211 
f B "setup_low_volt_detect" 2 450 "void(int8 mode)" `210  "Constants used in setup_low_volt_detect() are:"
d G "LVD_LVDIN" 2 452 "0x1F"
d G "LVD_45" 2 453 "0x1E"
d G "LVD_42" 2 454 "0x1D"
d G "LVD_40" 2 455 "0x1C"
d G "LVD_38" 2 456 "0x1B"
d G "LVD_36" 2 457 "0x1A"
d G "LVD_35" 2 458 "0x19"
d G "LVD_33" 2 459 "0x18"
d G "LVD_30" 2 460 "0x17"
d G "LVD_28" 2 461 "0x16"
d G "LVD_27" 2 462 "0x15"
d G "LVD_25" 2 463 "0x14"
d G "LVD_24" 2 464 "0x13"
d G "LVD_23" 2 465 "0x12"
d G "LVD_22" 2 466 "0x11"
d G "LVD_21" 2 467 "0x10"
d G "LVD_TRIGGER_BELOW" 2 469 "0"
d G "LVD_TRIGGER_ABOVE" 2 470 "0x80"
c L "setup_low_volt_detect" 2 3 2 "FUNCTION"
f N "setup_oscillator" 2 475 ""
v L "mode" 2 475 "int8" `213 
f B "setup_oscillator" 2 475 "int8(int8 mode)" `212 
f N "setup_oscillator" 2 476 ""
v L "mode" 2 476 "int8" `215 
v L "tune" 2 476 "sint8" `216 
f B "setup_oscillator" 2 476 "int8(int8 mode,sint8 tune)" `214  "Constants used in setup_oscillator() are:"
d G "OSC_31KHZ" 2 479 "0"
d G "OSC_125KHZ" 2 480 "0x10"
d G "OSC_250KHZ" 2 481 "0x20"
d G "OSC_500KHZ" 2 482 "0x30"
d G "OSC_1MHZ" 2 483 "0x40"
d G "OSC_2MHZ" 2 484 "0x50"
d G "OSC_4MHZ" 2 485 "0x60"
d G "OSC_8MHZ" 2 486 "0x70"
d G "OSC_16MHZ" 2 487 "0x4060"
d G "OSC_32MHZ" 2 488 "0x4070"
d G "OSC_TIMER1" 2 490 "1"
d G "OSC_INTRC" 2 491 "2"
d G "OSC_NORMAL" 2 492 "0"
d G "OSC_IDLE_MODE" 2 494 "0x80"
d G "OSC_31250" 2 495 "0x8000"
d G "OSC_PLL_ON" 2 496 "0x4000"
d G "OSC_PLL_OFF" 2 497 "0"
d G "OSC_STATE_STABLE" 2 501 "4"
d G "OSC_STATE_EXT_RUNNING" 2 502 "8"
c L "setup_oscillator" 2 3 4 "FUNCTION"
f N "setup_adc" 2 509 ""
v L "mode" 2 509 "int16" `218 
f B "setup_adc" 2 509 "void(int16 mode)" `217 
f N "read_adc" 2 510 ""
f B "read_adc" 2 510 "int8()" `219 
f N "read_adc" 2 511 ""
v L "mode" 2 511 "int8" `221 
f B "read_adc" 2 511 "int8(int8 mode)" `220 
f N "read_adc" 2 512 ""
f G "read_adc" 2 512 "int16()" `222 
f N "read_adc" 2 513 ""
v L "mode" 2 513 "int8" `223 
f G "read_adc" 2 513 "int16(int8 mode,int8 pins)" `222 
f N "adc_done" 2 514 ""
f B "adc_done" 2 514 "int8(int8 mode,int8 pins)" `222  "Constants used for SETUP_ADC() are:"
d G "ADC_OFF" 2 516 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 517 "0x100"
d G "ADC_CLOCK_DIV_4" 2 518 "0x04"
d G "ADC_CLOCK_DIV_8" 2 519 "0x01"
d G "ADC_CLOCK_DIV_16" 2 520 "0x05"
d G "ADC_CLOCK_DIV_32" 2 521 "0x02"
d G "ADC_CLOCK_DIV_64" 2 522 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 523 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 525 "0x00"
d G "ADC_TAD_MUL_2" 2 526 "0x08"
d G "ADC_TAD_MUL_4" 2 527 "0x10"
d G "ADC_TAD_MUL_6" 2 528 "0x18"
d G "ADC_TAD_MUL_8" 2 529 "0x20"
d G "ADC_TAD_MUL_12" 2 530 "0x28"
d G "ADC_TAD_MUL_16" 2 531 "0x30"
d G "ADC_TAD_MUL_20" 2 532 "0x38"
c L "adc_done" 2 3 1 "FUNCTION"
f N "setup_adc_ports" 2 535 ""
v L "pins" 2 535 "int8" `224 
f B "setup_adc_ports" 2 535 "void(int8 pins)" `223 
f N "setup_adc_ports" 2 536 ""
v L "pins" 2 536 "int8" `226 
v L "reference" 2 536 "int8" `227 
f B "setup_adc_ports" 2 536 "void(int8 pins,int8 reference)" `225 
f N "set_analog_pins" 2 537 ""
v L "pins" 2 537 "int8" `229 
f B "set_analog_pins" 2 537 "void(int8 pins)" `228 
f N "set_analog_pins" 2 538 ""
v L "pins" 2 538 "int8" `231 
v L "reference" 2 538 "int8" `232 
f B "set_analog_pins" 2 538 "void(int8 pins,int8 reference)" `230 
f N "set_adc_channel" 2 539 ""
v L "channel" 2 539 "int8" `234 
f B "set_adc_channel" 2 539 "void(int8 channel)" `233  "Constants used in SETUP_ADC_PORTS() and SET_ANALOG_PINS() are:"
d G "NO_ANALOGS" 2 542 "0x0F" "None"
d G "ALL_ANALOG" 2 543 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 2 544 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 2 545 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 2 546 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 2 547 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 2 548 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 2 549 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 2 550 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 2 551 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 552 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 553 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 554 "0x0D" "A0 A1"
d G "AN0" 2 555 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 2 556 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 2 557 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 2 558 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 2 559 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 2 560 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 2 561 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 2 562 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 2 563 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 2 564 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 2 565 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 2 566 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 2 567 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 570 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 571 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 572 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 573 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 576 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 577 "1"
d G "ADC_READ_ONLY" 2 578 "6"
c L "set_adc_channel" 2 3 3 "FUNCTION"
f N "abs" 2 584 ""
v L "x" 2 584 "sint8" `236 
f B "abs" 2 584 "sint8(sint8 x)" `235 
f N "abs" 2 585 ""
v L "x" 2 585 "sint16" `238 
f B "abs" 2 585 "sint16(sint16 x)" `237 
f N "abs" 2 586 ""
v L "x" 2 586 "sint32" `240 
f B "abs" 2 586 "sint32(sint32 x)" `239 
f N "abs" 2 587 ""
v L "x" 2 587 "float" `242 
f B "abs" 2 587 "float(float x)" `241 
f N "_mul" 2 588 ""
v L "??65535" 2 588 "int8" `244 
v L "??65535" 2 588 "int8" `245 
f B "_mul" 2 588 "int16(int8 ,int8 )" `243 
f N "_mul" 2 589 ""
v L "??65535" 2 589 "sint8" `247 
v L "??65535" 2 589 "sint8" `248 
f B "_mul" 2 589 "sint16(sint8 ,sint8 )" `246 
f N "_mul" 2 590 ""
v L "??65535" 2 590 "int16" `250 
v L "??65535" 2 590 "int16" `251 
f B "_mul" 2 590 "int32(int16 ,int16 )" `249 
f N "_mul" 2 591 ""
v L "??65535" 2 591 "sint16" `253 
v L "??65535" 2 591 "sint16" `254 
f B "_mul" 2 591 "sint32(sint16 ,sint16 )" `252  "Memory Manipulation Prototypes:"
f N "read_bank" 2 594 ""
v L "bank" 2 594 "int8" `256 
v L "offset" 2 594 "int8" `257 
f B "read_bank" 2 594 "int8(int8 bank,int8 offset)" `255 
f N "write_bank" 2 595 ""
v L "bank" 2 595 "int8" `259 
v L "offset" 2 595 "int8" `260 
v L "value" 2 595 "int8" `261 
f B "write_bank" 2 595 "void(int8 bank,int8 offset,int8 value)" `258 
f N "strcpy" 2 596 ""
v L "dest" 2 596 "*int8" `263 
v L "src" 2 596 "*int8" `264 
f B "strcpy" 2 596 "void(*int8 dest,*int8 src)" `262 
f N "memset" 2 597 ""
v L "destination" 2 597 "*int8" `266 
v L "value" 2 597 "int8" `267 
v L "num" 2 597 "int16" `268 
f B "memset" 2 597 "void(*int8 destination,int8 value,int16 num)" `265 
f N "memcpy" 2 598 ""
v L "destination" 2 598 "*int8" `270 
v L "source" 2 598 "*int8" `271 
v L "num" 2 598 "int16" `272 
f B "memcpy" 2 598 "void(*int8 destination,*int8 source,int16 num)" `269  "String Prototypes:"
f N "toupper" 2 601 ""
v L "cvalue" 2 601 "int8" `274 
f B "toupper" 2 601 "int8(int8 cvalue)" `273 
f N "tolower" 2 602 ""
v L "cvalue" 2 602 "int8" `276 
f B "tolower" 2 602 "int8(int8 cvalue)" `275 
f N "sprintf" 2 603 ""
v L "string" 2 603 "*int8" `278 
v L "cstring" 2 603 "*int8" `279 
f B "sprintf" 2 603 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `277  "Data Manipulators Prototypes:"
f N "shift_left" 2 606 ""
v L "address" 2 606 "*int8" `282 
v L "bytes" 2 606 "int8" `283 
v L "value" 2 606 "int8" `284 
f B "shift_left" 2 606 "int8(*int8 address,int8 bytes,int8 value)" `281 
f N "shift_right" 2 607 ""
v L "address" 2 607 "*int8" `286 
v L "bytes" 2 607 "int8" `287 
v L "value" 2 607 "int8" `288 
f B "shift_right" 2 607 "int8(*int8 address,int8 bytes,int8 value)" `285 
f N "rotate_left" 2 608 ""
v L "address" 2 608 "*int8" `290 
v L "bytes" 2 608 "int8" `291 
f B "rotate_left" 2 608 "void(*int8 address,int8 bytes)" `289 
f N "rotate_right" 2 609 ""
v L "address" 2 609 "*int8" `293 
v L "bytes" 2 609 "int8" `294 
f B "rotate_right" 2 609 "void(*int8 address,int8 bytes)" `292 
f N "swap" 2 610 ""
v L "value" 2 610 "int8" `296 
f B "swap" 2 610 "void(int8 value)" `295 
f N "make8" 2 611 ""
v L "var" 2 611 "int16" `298 
v L "offset" 2 611 "int8" `299 
f B "make8" 2 611 "int8(int16 var,int8 offset)" `297 
f N "make8" 2 612 ""
v L "var" 2 612 "int32" `301 
v L "offset" 2 612 "int8" `302 
f B "make8" 2 612 "int8(int32 var,int8 offset)" `300 
f N "make16" 2 613 ""
v L "varhigh" 2 613 "int8" `304 
v L "varlow" 2 613 "int8" `305 
f B "make16" 2 613 "int16(int8 varhigh,int8 varlow)" `303 
f N "make32" 2 614 ""
v L "var1" 2 614 "int16" `307 
f B "make32" 2 614 "int32(int16 var1)" `306 
f N "make32" 2 615 ""
v L "var1" 2 615 "int16" `309 
v L "var2" 2 615 "int16" `310 
f B "make32" 2 615 "int32(int16 var1,int16 var2)" `308 
f N "make32" 2 616 ""
v L "var1" 2 616 "int16" `312 
v L "var2" 2 616 "int8" `313 
f B "make32" 2 616 "int32(int16 var1,int8 var2)" `311 
f N "make32" 2 617 ""
v L "var1" 2 617 "int16" `315 
v L "var2" 2 617 "int8" `316 
v L "var3" 2 617 "int8" `317 
f B "make32" 2 617 "int32(int16 var1,int8 var2,int8 var3)" `314 
f N "make32" 2 618 ""
v L "var1" 2 618 "int8" `319 
f B "make32" 2 618 "int32(int8 var1)" `318 
f N "make32" 2 619 ""
v L "var1" 2 619 "int8" `321 
v L "var2" 2 619 "int8" `322 
f B "make32" 2 619 "int32(int8 var1,int8 var2)" `320 
f N "make32" 2 620 ""
v L "var1" 2 620 "int8" `324 
v L "var2" 2 620 "int8" `325 
v L "var3" 2 620 "int8" `326 
f B "make32" 2 620 "int32(int8 var1,int8 var2,int8 var3)" `323 
f N "make32" 2 621 ""
v L "var1" 2 621 "int8" `328 
v L "var2" 2 621 "int8" `329 
v L "var3" 2 621 "int8" `330 
v L "var4" 2 621 "int8" `331 
f B "make32" 2 621 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `327 
f N "make32" 2 622 ""
v L "var1" 2 622 "int8" `333 
v L "var2" 2 622 "int16" `334 
f B "make32" 2 622 "int32(int8 var1,int16 var2)" `332 
f N "make32" 2 623 ""
v L "var1" 2 623 "int8" `336 
v L "var2" 2 623 "int16" `337 
v L "var3" 2 623 "int8" `338 
f B "make32" 2 623 "int32(int8 var1,int16 var2,int8 var3)" `335 
f N "make32" 2 624 ""
v L "var1" 2 624 "int8" `340 
v L "var2" 2 624 "int8" `341 
v L "var3" 2 624 "int16" `342 
f B "make32" 2 624 "int32(int8 var1,int8 var2,int16 var3)" `339 
f N "bit_set" 2 625 ""
v L "var" 2 625 "int8" `344 
v L "bit" 2 625 "int8" `345 
f B "bit_set" 2 625 "void(int8 var,int8 bit)" `343 
f N "bit_set" 2 626 ""
v L "var" 2 626 "int16" `347 
v L "bit" 2 626 "int8" `348 
f B "bit_set" 2 626 "void(int16 var,int8 bit)" `346 
f N "bit_set" 2 627 ""
v L "var" 2 627 "int32" `350 
v L "bit" 2 627 "int8" `351 
f B "bit_set" 2 627 "void(int32 var,int8 bit)" `349 
f N "bit_clear" 2 628 ""
v L "var" 2 628 "int8" `353 
v L "bit" 2 628 "int8" `354 
f B "bit_clear" 2 628 "void(int8 var,int8 bit)" `352 
f N "bit_clear" 2 629 ""
v L "var" 2 629 "int16" `356 
v L "bit" 2 629 "int8" `357 
f B "bit_clear" 2 629 "void(int16 var,int8 bit)" `355 
f N "bit_clear" 2 630 ""
v L "var" 2 630 "int32" `359 
v L "bit" 2 630 "int8" `360 
f B "bit_clear" 2 630 "void(int32 var,int8 bit)" `358 
f N "bit_test" 2 631 ""
v L "var" 2 631 "int8" `362 
v L "bit" 2 631 "int8" `363 
f B "bit_test" 2 631 "int8(int8 var,int8 bit)" `361 
f N "bit_test" 2 632 ""
v L "var" 2 632 "int16" `365 
v L "bit" 2 632 "int8" `366 
f B "bit_test" 2 632 "int8(int16 var,int8 bit)" `364 
f N "bit_test" 2 633 ""
v L "var" 2 633 "int32" `368 
v L "bit" 2 633 "int8" `369 
f B "bit_test" 2 633 "int8(int32 var,int8 bit)" `367  "#use delay() Prototypes:"
f N "delay_cycles" 2 636 ""
v L "count" 2 636 "int8" `371 
f B "delay_cycles" 2 636 "void(int8 count)" `370 
f N "delay_ms" 2 637 ""
v L "time" 2 637 "int16" `373 
f B "delay_ms" 2 637 "void(int16 time)" `372 
f N "delay_us" 2 638 ""
v L "time" 2 638 "int16" `375 
f B "delay_us" 2 638 "void(int16 time)" `374  "#use rs232() Prototypes:"
f N "putchar" 2 641 ""
v L "cdata" 2 641 "int8" `377 
f B "putchar" 2 641 "void(int8 cdata)" `376 
f N "putchar" 2 642 ""
v L "cdata" 2 642 "int8" `379 
v L "stream" 2 642 "int8" `380 
f B "putchar" 2 642 "void(int8 cdata,int8 stream)" `378 
f N "puts" 2 643 ""
v L "string" 2 643 "*int8" `382 
f B "puts" 2 643 "void(*int8 string)" `381 
f N "puts" 2 644 ""
v L "string" 2 644 "*int8" `384 
v L "stream" 2 644 "int8" `385 
f B "puts" 2 644 "void(*int8 string,int8 stream)" `383 
f N "getch" 2 645 ""
f B "getch" 2 645 "int8()" `386 
f N "getch" 2 646 ""
v L "stream" 2 646 "int8" `388 
f B "getch" 2 646 "int8(int8 stream)" `387 
f N "gets" 2 647 ""
v L "string" 2 647 "*int8" `390 
f B "gets" 2 647 "void(*int8 string)" `389 
f N "gets" 2 648 ""
v L "string" 2 648 "*int8" `392 
v L "stream" 2 648 "int8" `393 
f B "gets" 2 648 "void(*int8 string,int8 stream)" `391 
f N "kbhit" 2 649 ""
f B "kbhit" 2 649 "int8()" `394 
f N "kbhit" 2 650 ""
v L "stream" 2 650 "int8" `396 
f B "kbhit" 2 650 "int8(int8 stream)" `395 
f N "printf" 2 651 ""
v L "string" 2 651 "*int8" `398 
f B "printf" 2 651 "void(*int8 string,*int8 _VA_LIST)" `397 
f N "fprintf" 2 652 ""
v L "stream" 2 652 "int8" `401 
v L "string" 2 652 "*int8" `402 
f B "fprintf" 2 652 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `400 
f N "putc_send" 2 653 ""
f B "putc_send" 2 653 "void()" `404 
f N "fputc_send" 2 654 ""
v L "stream" 2 654 "int8" `406 
f B "fputc_send" 2 654 "void(int8 stream)" `405 
f N "rcv_buffer_full" 2 655 ""
f B "rcv_buffer_full" 2 655 "int8()" `407 
f N "rcv_buffer_full" 2 656 ""
v L "stream" 2 656 "int8" `409 
f B "rcv_buffer_full" 2 656 "int8(int8 stream)" `408 
f N "rcv_buffer_bytes" 2 657 ""
f B "rcv_buffer_bytes" 2 657 "int16()" `410 
f N "rcv_buffer_bytes" 2 658 ""
v L "stream" 2 658 "int8" `412 
f B "rcv_buffer_bytes" 2 658 "int16(int8 stream)" `411 
f N "tx_buffer_full" 2 659 ""
f B "tx_buffer_full" 2 659 "int8()" `413 
f N "tx_buffer_full" 2 660 ""
v L "stream" 2 660 "int8" `415 
f B "tx_buffer_full" 2 660 "int8(int8 stream)" `414 
f N "tx_buffer_bytes" 2 661 ""
f B "tx_buffer_bytes" 2 661 "int16()" `416 
f N "tx_buffer_bytes" 2 662 ""
v L "stream" 2 662 "int8" `418 
f B "tx_buffer_bytes" 2 662 "int16(int8 stream)" `417  "#use i2c() Prototypes:"
f N "i2c_read" 2 665 ""
f B "i2c_read" 2 665 "int8()" `419 
f N "i2c_read" 2 666 ""
v L "stream" 2 666 "int8" `421 
f B "i2c_read" 2 666 "int8(int8 stream)" `420 
f N "i2c_read" 2 667 ""
v L "stream" 2 667 "int8" `423 
v L "ack" 2 667 "int8" `424 
f B "i2c_read" 2 667 "int8(int8 stream,int8 ack)" `422 
f N "i2c_write" 2 668 ""
v L "data" 2 668 "int8" `426 
f B "i2c_write" 2 668 "int8(int8 data)" `425 
f N "i2c_write" 2 669 ""
v L "stream" 2 669 "int8" `428 
v L "data" 2 669 "int8" `429 
f B "i2c_write" 2 669 "int8(int8 stream,int8 data)" `427 
f N "i2c_start" 2 670 ""
f B "i2c_start" 2 670 "void()" `430 
f N "i2c_start" 2 671 ""
v L "stream" 2 671 "int8" `432 
f B "i2c_start" 2 671 "void(int8 stream)" `431 
f N "i2c_start" 2 672 ""
v L "stream" 2 672 "int8" `434 
v L "restart" 2 672 "int8" `435 
f B "i2c_start" 2 672 "void(int8 stream,int8 restart)" `433 
f N "i2c_stop" 2 673 ""
f B "i2c_stop" 2 673 "void()" `436 
f N "i2c_stop" 2 674 ""
v L "stream" 2 674 "int8" `438 
f B "i2c_stop" 2 674 "void(int8 stream)" `437 
f N "i2c_isr_state" 2 675 ""
f B "i2c_isr_state" 2 675 "int8()" `439 
f N "i2c_slaveaddr" 2 676 ""
v L "addr" 2 676 "int8" `441 
f B "i2c_slaveaddr" 2 676 "void(int8 addr)" `440 
f N "i2c_slaveaddr" 2 677 ""
v L "stream" 2 677 "int8" `443 
v L "addr" 2 677 "int8" `444 
f B "i2c_slaveaddr" 2 677 "void(int8 stream,int8 addr)" `442 
f N "i2c_poll" 2 678 ""
f B "i2c_poll" 2 678 "int8()" `445 
f N "i2c_poll" 2 679 ""
v L "stream" 2 679 "int8" `447 
f B "i2c_poll" 2 679 "int8(int8 stream)" `446 
f N "i2c_init" 2 680 ""
v L "baud" 2 680 "int32" `449 
f B "i2c_init" 2 680 "void(int32 baud)" `448 
f N "i2c_init" 2 681 ""
v L "stream" 2 681 "int8" `451 
v L "baud" 2 681 "int32" `452 
f B "i2c_init" 2 681 "void(int8 stream,int32 baud)" `450  "#use spi() Prototypes:"
f N "spi_xfer" 2 684 ""
f B "spi_xfer" 2 684 "int8()" `453 
f N "spi_xfer" 2 685 ""
f G "spi_xfer" 2 685 "int16(int8 data)" `454 
f N "spi_xfer" 2 686 ""
f G "spi_xfer" 2 686 "int32(int8 data)" `454 
f N "spi_xfer" 2 687 ""
v L "data" 2 687 "int8" `455 
f B "spi_xfer" 2 687 "int8(int8 data)" `454 
f N "spi_xfer" 2 688 ""
v L "data" 2 688 "int16" `457 
f B "spi_xfer" 2 688 "int16(int16 data)" `456 
f N "spi_xfer" 2 689 ""
v L "data" 2 689 "int32" `459 
f B "spi_xfer" 2 689 "int32(int32 data)" `458 
f N "spi_xfer" 2 690 ""
v L "stream" 2 690 "int8" `461 
v L "data" 2 690 "int8" `462 
f B "spi_xfer" 2 690 "int8(int8 stream,int8 data)" `460 
f N "spi_xfer" 2 691 ""
v L "stream" 2 691 "int8" `464 
v L "data" 2 691 "int16" `465 
f B "spi_xfer" 2 691 "int16(int8 stream,int16 data)" `463 
f N "spi_xfer" 2 692 ""
v L "stream" 2 692 "int8" `467 
v L "data" 2 692 "int32" `468 
f B "spi_xfer" 2 692 "int32(int8 stream,int32 data)" `466 
f N "spi_xfer" 2 693 ""
v L "stream" 2 693 "int8" `470 
v L "data" 2 693 "int8" `471 
v L "bits" 2 693 "int8" `472 
f B "spi_xfer" 2 693 "int8(int8 stream,int8 data,int8 bits)" `469 
f N "spi_xfer" 2 694 ""
v L "stream" 2 694 "int8" `474 
v L "data" 2 694 "int16" `475 
v L "bits" 2 694 "int8" `476 
f B "spi_xfer" 2 694 "int16(int8 stream,int16 data,int8 bits)" `473 
f N "spi_xfer" 2 695 ""
v L "stream" 2 695 "int8" `478 
v L "data" 2 695 "int32" `479 
v L "bits" 2 695 "int8" `480 
f B "spi_xfer" 2 695 "int32(int8 stream,int32 data,int8 bits)" `477 
f N "spi_init" 2 696 ""
v L "baud" 2 696 "int32" `482 
f B "spi_init" 2 696 "void(int32 baud)" `481 
f N "spi_init" 2 697 ""
v L "stream" 2 697 "int8" `484 
v L "baud" 2 697 "int32" `485 
f B "spi_init" 2 697 "void(int8 stream,int32 baud)" `483 
f N "spi_speed" 2 698 ""
v L "baud" 2 698 "int32" `487 
f B "spi_speed" 2 698 "void(int32 baud)" `486 
f N "spi_speed" 2 699 ""
v L "stream" 2 699 "int8" `489 
v L "baud" 2 699 "int32" `490 
f B "spi_speed" 2 699 "void(int8 stream,int32 baud)" `488 
f N "spi_speed" 2 700 ""
v L "stream" 2 700 "int8" `492 
v L "baud" 2 700 "int32" `493 
v L "clock" 2 700 "int32" `494 
f B "spi_speed" 2 700 "void(int8 stream,int32 baud,int32 clock)" `491 
f N "spi_prewrite" 2 701 ""
v L "data" 2 701 "int8" `496 
f B "spi_prewrite" 2 701 "void(int8 data)" `495 
f N "spi_prewrite" 2 702 ""
v L "data" 2 702 "int16" `498 
f B "spi_prewrite" 2 702 "void(int16 data)" `497 
f N "spi_prewrite" 2 703 ""
v L "data" 2 703 "int32" `500 
f B "spi_prewrite" 2 703 "void(int32 data)" `499 
f N "spi_prewrite" 2 704 ""
v L "??65535" 2 704 "int8" `502 
v L "data" 2 704 "int8" `503 
f B "spi_prewrite" 2 704 "void(int8 ,int8 data)" `501 
f N "spi_prewrite" 2 705 ""
v L "??65535" 2 705 "int8" `505 
v L "data" 2 705 "int16" `506 
f B "spi_prewrite" 2 705 "void(int8 ,int16 data)" `504 
f N "spi_prewrite" 2 706 ""
v L "??65535" 2 706 "int8" `508 
v L "data" 2 706 "int32" `509 
f B "spi_prewrite" 2 706 "void(int8 ,int32 data)" `507 
f N "spi_xfer_in" 2 707 ""
f B "spi_xfer_in" 2 707 "int8()" `510 
f N "spi_xfer_in" 2 708 ""
f G "spi_xfer_in" 2 708 "int16(int8 bits)" `511 
f N "spi_xfer_in" 2 709 ""
f G "spi_xfer_in" 2 709 "int32(int8 bits)" `511 
f N "spi_xfer_in" 2 710 ""
v L "bits" 2 710 "int8" `512 
f B "spi_xfer_in" 2 710 "int8(int8 bits)" `511 
f N "spi_xfer_in" 2 711 ""
v L "bits" 2 711 "int8" `514 
f G "spi_xfer_in" 2 711 "int16(int8 bits,int8 bits)" `513 
f N "spi_xfer_in" 2 712 ""
v L "bits" 2 712 "int8" `514 
f G "spi_xfer_in" 2 712 "int32(int8 bits,int8 bits)" `513 
f N "spi_xfer_in" 2 713 ""
v L "stream" 2 713 "int8" `514 
v L "bits" 2 713 "int8" `515 
f B "spi_xfer_in" 2 713 "int8(int8 stream,int8 bits)" `513 
f N "spi_xfer_in" 2 714 ""
v L "stream" 2 714 "int8" `514 
v L "bits" 2 714 "int8" `518 
f G "spi_xfer_in" 2 714 "int16(int8 stream,int8 bits,int8 task)" `516 
f N "spi_xfer_in" 2 715 ""
v L "stream" 2 715 "int8" `514 
v L "bits" 2 715 "int8" `518 
f G "spi_xfer_in" 2 715 "int32(int8 stream,int8 bits,int8 task)" `516  "#use rtos() Prototypes:"
f N "rtos_run" 2 718 ""
f B "rtos_run" 2 718 "void(int8 stream,int8 bits,int8 task)" `516 
f N "rtos_yield" 2 719 ""
f B "rtos_yield" 2 719 "void(int8 bits,int8 task)" `517 
f N "rtos_enable" 2 720 ""
v L "task" 2 720 "int8" `519 
f B "rtos_enable" 2 720 "void(int8 task)" `518 
f N "rtos_disable" 2 721 ""
v L "task" 2 721 "int8" `521 
f B "rtos_disable" 2 721 "void(int8 task)" `520 
f N "rtos_terminate" 2 722 ""
f B "rtos_terminate" 2 722 "void()" `522 
f N "rtos_await" 2 723 ""
v L "flag" 2 723 "int8" `524 
f B "rtos_await" 2 723 "void(int8 flag)" `523 
f N "rtos_wait" 2 724 ""
v L "sem" 2 724 "int8" `526 
f B "rtos_wait" 2 724 "void(int8 sem)" `525 
f N "rtos_signal" 2 725 ""
v L "sem" 2 725 "int8" `528 
f B "rtos_signal" 2 725 "void(int8 sem)" `527 
f N "rtos_msg_send" 2 726 ""
v L "task" 2 726 "int8" `530 
v L "msg" 2 726 "int8" `531 
f B "rtos_msg_send" 2 726 "void(int8 task,int8 msg)" `529 
f N "rtos_msg_read" 2 727 ""
f B "rtos_msg_read" 2 727 "int8()" `532 
f N "rtos_msg_poll" 2 728 ""
f B "rtos_msg_poll" 2 728 "int8()" `533 
f N "rtos_overrun" 2 729 ""
v L "task" 2 729 "int8" `535 
f B "rtos_overrun" 2 729 "int8(int8 task)" `534 
f N "rtos_stats" 2 730 ""
v L "task" 2 730 "int8" `537 
v L "stat" 2 730 "*int8" `538 
f B "rtos_stats" 2 730 "void(int8 task,*int8 stat)" `536  "#use timer() Prototypes:"
f N "get_ticks" 2 733 ""
f B "get_ticks" 2 733 "int8()" `539 
f N "get_ticks" 2 734 ""
f G "get_ticks" 2 734 "int16(int8 stream)" `540 
f N "get_ticks" 2 735 ""
f G "get_ticks" 2 735 "int32(int8 stream)" `540 
f N "get_ticks" 2 736 ""
v L "stream" 2 736 "int8" `541 
f B "get_ticks" 2 736 "int8(int8 stream)" `540 
f N "get_ticks" 2 737 ""
v L "stream" 2 737 "int8" `543 
f G "get_ticks" 2 737 "int16(int8 stream)" `542 
f N "get_ticks" 2 738 ""
v L "stream" 2 738 "int8" `543 
f G "get_ticks" 2 738 "int32(int8 stream)" `542 
f N "set_ticks" 2 739 ""
v L "value" 2 739 "int8" `543 
f B "set_ticks" 2 739 "void(int8 value)" `542 
f N "set_ticks" 2 740 ""
v L "value" 2 740 "int16" `545 
f B "set_ticks" 2 740 "void(int16 value)" `544 
f N "set_ticks" 2 741 ""
v L "value" 2 741 "int32" `547 
f B "set_ticks" 2 741 "void(int32 value)" `546 
f N "set_ticks" 2 742 ""
v L "stream" 2 742 "int8" `549 
v L "value" 2 742 "int8" `550 
f B "set_ticks" 2 742 "void(int8 stream,int8 value)" `548 
f N "set_ticks" 2 743 ""
v L "stream" 2 743 "int8" `552 
v L "value" 2 743 "int16" `553 
f B "set_ticks" 2 743 "void(int8 stream,int16 value)" `551 
f N "set_ticks" 2 744 ""
v L "stream" 2 744 "int8" `555 
v L "value" 2 744 "int32" `556 
f B "set_ticks" 2 744 "void(int8 stream,int32 value)" `554  "#use pwm() Prototypes:"
f N "pwm_on" 2 747 ""
f B "pwm_on" 2 747 "void()" `557 
f N "pwm_on" 2 748 ""
v L "stream" 2 748 "int8" `559 
f B "pwm_on" 2 748 "void(int8 stream)" `558 
f N "pwm_off" 2 749 ""
f B "pwm_off" 2 749 "void()" `560 
f N "pwm_off" 2 750 ""
v L "stream" 2 750 "int8" `562 
f B "pwm_off" 2 750 "void(int8 stream)" `561 
f N "pwm_set_duty" 2 751 ""
v L "duty" 2 751 "int16" `564 
f B "pwm_set_duty" 2 751 "void(int16 duty)" `563 
f N "pwm_set_duty" 2 752 ""
v L "stream" 2 752 "int8" `566 
v L "duty" 2 752 "int16" `567 
f B "pwm_set_duty" 2 752 "void(int8 stream,int16 duty)" `565 
f N "pwm_set_duty_percent" 2 753 ""
v L "percent" 2 753 "int16" `569 
f B "pwm_set_duty_percent" 2 753 "void(int16 percent)" `568 
f N "pwm_set_duty_percent" 2 754 ""
v L "stream" 2 754 "int8" `571 
v L "percent" 2 754 "int16" `572 
f B "pwm_set_duty_percent" 2 754 "void(int8 stream,int16 percent)" `570 
f N "pwm_set_frequency" 2 755 ""
v L "frequency" 2 755 "int32" `574 
f B "pwm_set_frequency" 2 755 "void(int32 frequency)" `573 
f N "pwm_set_frequency" 2 756 ""
v L "stream" 2 756 "int8" `576 
v L "frequency" 2 756 "int32" `577 
f B "pwm_set_frequency" 2 756 "void(int8 stream,int32 frequency)" `575  "#use capture() Prototypes:"
f N "get_capture_time" 2 759 ""
f B "get_capture_time" 2 759 "int16()" `578 
f N "get_capture_time" 2 760 ""
v L "stream" 2 760 "int8" `580 
f B "get_capture_time" 2 760 "int16(int8 stream)" `579 
f N "get_capture_event" 2 761 ""
f B "get_capture_event" 2 761 "int8()" `581 
f N "get_capture_event" 2 762 ""
v L "stream" 2 762 "int8" `583 
f B "get_capture_event" 2 762 "int8(int8 stream)" `582  "Enviroment Prototypes:"
c L "get_capture_event" 2 3 2 "FUNCTION"
f N "goto_address" 2 775 ""
v L "address" 2 775 "int16" `585 
f B "goto_address" 2 775 "void(int16 address)" `584 
f N "label_address" 2 776 ""
v L "label" 2 776 "int16" `587 
f B "label_address" 2 776 "int16(int16 label)" `586  "Program Memory Prototypes:"
f N "read_program_memory" 2 779 ""
v L "address" 2 779 "int16" `589 
v L "dataptr" 2 779 "*int8" `590 
v L "count" 2 779 "int16" `591 
f B "read_program_memory" 2 779 "void(int16 address,*int8 dataptr,int16 count)" `588 
f N "read_program_eeprom" 2 780 ""
v L "address" 2 780 "int16" `593 
f B "read_program_eeprom" 2 780 "int16(int16 address)" `592 
f N "erase_program_eeprom" 2 781 ""
v L "address" 2 781 "int16" `595 
f B "erase_program_eeprom" 2 781 "void(int16 address)" `594 
f N "write_program_memory" 2 782 ""
v L "address" 2 782 "int16" `597 
v L "dataptr" 2 782 "*int8" `598 
v L "count" 2 782 "int16" `599 
f B "write_program_memory" 2 782 "void(int16 address,*int8 dataptr,int16 count)" `596 
f N "write_program_eeprom" 2 783 ""
v L "address" 2 783 "int16" `601 
v L "data" 2 783 "int16" `602 
f B "write_program_eeprom" 2 783 "void(int16 address,int16 data)" `600  "EEPROM Prototypes:"
d G "__EEADDRESS__" 2 788 "unsigned int16"
f N "read_eeprom" 2 793 ""
v L "address" 2 793 "int16" `604 
f B "read_eeprom" 2 793 "int8(int16 address)" `603 
f N "write_eeprom" 2 794 ""
v L "address" 2 794 "int16" `606 
v L "value" 2 794 "int8" `607 
f B "write_eeprom" 2 794 "void(int16 address,int8 value)" `605  "INT"
c L "write_eeprom" 2 3 4 "FUNCTION"
f N "enable_interrupts" 2 801 ""
v L "interrupt" 2 801 "int32" `609 
f B "enable_interrupts" 2 801 "void(int32 interrupt)" `608 
f N "disable_interrupts" 2 802 ""
v L "interrupt" 2 802 "int32" `611 
f B "disable_interrupts" 2 802 "void(int32 interrupt)" `610 
f N "clear_interrupt" 2 803 ""
v L "interrupt" 2 803 "int32" `613 
f B "clear_interrupt" 2 803 "void(int32 interrupt)" `612 
f N "interrupt_active" 2 804 ""
v L "interrupt" 2 804 "int32" `615 
f B "interrupt_active" 2 804 "int8(int32 interrupt)" `614 
f N "interrupt_enabled" 2 805 ""
v L "interrupt" 2 805 "int32" `617 
f B "interrupt_enabled" 2 805 "int8(int32 interrupt)" `616 
f N "ext_int_edge" 2 806 ""
v L "source" 2 806 "int8" `619 
v L "edge" 2 806 "int8" `620 
f B "ext_int_edge" 2 806 "void(int8 source,int8 edge)" `618 
f N "jump_to_isr" 2 807 ""
v L "address" 2 807 "int16" `622 
f B "jump_to_isr" 2 807 "void(int16 address)" `621  "Constants used in EXT_INT_EDGE() are:"
d G "L_TO_H" 2 809 "0x40"
d G "H_TO_L" 2 810 "0"
d G "GLOBAL" 2 812 "0xF2C0"
d G "PERIPH" 2 813 "0xF240"
d G "INT_RTCC" 2 814 "0x00F220"
d G "INT_TIMER0" 2 815 "0x00F220"
d G "INT_TIMER1" 2 816 "0x009D01"
d G "INT_TIMER2" 2 817 "0x009D02"
d G "INT_TIMER3" 2 818 "0x00A002"
d G "INT_EXT_L2H" 2 819 "0x5000F210"
d G "INT_EXT_H2L" 2 820 "0x6000F210"
d G "INT_EXT" 2 821 "0x00F210"
d G "INT_EXT1_L2H" 2 822 "0x5001F008"
d G "INT_EXT1_H2L" 2 823 "0x6001F008"
d G "INT_EXT1" 2 824 "0x00F008"
d G "INT_EXT2_L2H" 2 825 "0x5002F010"
d G "INT_EXT2_H2L" 2 826 "0x6002F010"
d G "INT_EXT2" 2 827 "0x00F010"
d G "INT_RB" 2 828 "0x00FFF208"
d G "INT_PSP" 2 829 "0x009D80"
d G "INT_AD" 2 830 "0x009D40"
d G "INT_RDA" 2 831 "0x009D20"
d G "INT_TBE" 2 832 "0x009D10"
d G "INT_SSP" 2 833 "0x009D08"
d G "INT_CCP1" 2 834 "0x009D04"
d G "INT_CCP2" 2 835 "0x00A001"
d G "INT_BUSCOL" 2 836 "0x00A008"
d G "INT_LOWVOLT" 2 837 "0x00A004"
d G "INT_COMP" 2 838 "0x00A040"
d G "INT_EEPROM" 2 839 "0x00A010"
d G "INT_OSCF" 2 840 "0x00A080"
d G "INT_HLVD" 2 841 "0x00A004"
D G "MATH_H" 3 30 ""
D G "PI" 3 35 "3.1415926535897932"
D G "SQRT2" 3 38 "1.4142135623730950"
C L "jump_to_isr" 3 2 3 "FUNCTION"
F N "CEIL_FLOOR" 3 45 ""
V L "x" 3 45 "float" `628 
V L "n" 3 45 "int8" `629 
F G "CEIL_FLOOR" 3 46 "float(float x,int8 n)" `627 
V L "y" 3 47 "float" `630 
V L "res" 3 47 "float" `631 
V L "l" 3 48 "int16" `632 
V L "s" 3 49 "int1" `633 
C L "floor" 3 2 5 "FUNCTION"
F N "floor" 3 207 ""
V L "x" 3 207 "float" `648 
F G "floor" 3 208 "float(float x)" `647 
C L "ceil" 3 2 5 "FUNCTION"
F N "ceil" 3 233 ""
V L "x" 3 233 "float" `650 
F G "ceil" 3 234 "float(float x)" `649 
D G "fabs" 3 259 "abs"
C L "fmod" 3 2 6 "FUNCTION"
F N "fmod" 3 271 ""
V L "x" 3 271 "float" `652 
V L "y" 3 271 "float" `653 
F G "fmod" 3 272 "float(float x,float y)" `651 
V L "i" 3 273 "float" `654 
D G "LN2" 3 334 "0.6931471805599453"
D G "LN2_INV" 3 335 "1.4426950408889634073"
V G "pe" 3 337 "[6]" `659 
F N "exp" 3 341 ""
V L "x" 3 341 "float" `662 
F G "exp" 3 342 "float(float x)" `661 
V L "y" 3 343 "float" `663 
V L "res" 3 343 "float" `664 
V L "r" 3 343 "float" `665 
V L "n" 3 347 "sint8" `666 
V L "s" 3 348 "int1" `667 
C L "exp" 3 2 1 "FUNCTION"
V G "pl" 3 525 "[4]" `671 
V G "ql" 3 526 "[4]" `674 
C L "log" 3 2 3 "FUNCTION"
F N "log" 3 534 ""
V L "x" 3 534 "float" `677 
F G "log" 3 535 "float(float x)" `676 
V L "y" 3 536 "float" `678 
V L "res" 3 536 "float" `679 
V L "r" 3 536 "float" `680 
V L "y2" 3 536 "float" `681 
V L "n" 3 540 "sint8" `682 
C L "log" 3 2 1 "FUNCTION"
D G "LN10" 3 758 "2.3025850929940456"
D G "LN10_INV" 3 759 "0.4342944819032518276"
C L "log10" 3 2 3 "FUNCTION"
F N "log10" 3 767 ""
V L "x" 3 767 "float" `684 
F G "log10" 3 768 "float(float x)" `683 
V L "r" 3 769 "float" `685 
C L "modf" 3 2 8 "FUNCTION"
F N "modf" 3 808 ""
V L "value" 3 808 "float" `687 
V L "iptr" 3 808 "*float" `688 
F G "modf" 3 809 "float(float value,*float iptr)" `686 
C L "pwr" 3 2 6 "FUNCTION"
F N "pwr" 3 836 ""
V L "x" 3 836 "float" `690 
V L "y" 3 836 "float" `691 
F G "pwr" 3 837 "float(float x,float y)" `689 
C L "pow" 3 2 7 "FUNCTION"
F N "pow" 3 899 ""
V L "x" 3 899 "float" `693 
V L "y" 3 899 "float" `694 
F G "pow" 3 900 "float(float x,float y)" `692 
C L "sqrt" 3 2 5 "FUNCTION"
F N "sqrt" 3 960 ""
V L "x" 3 960 "float" `696 
F G "sqrt" 3 961 "float(float x)" `695 
V L "y" 3 962 "float" `697 
V L "res" 3 962 "float" `698 
V L "p" 3 966 "*int8" `699 
D G "PI_DIV_BY_TWO_INV" 3 1155 "0.63661977236758134"
D G "PI_DIV_BY_TWO" 3 1159 "1.5707963267948966"
D G "TWOBYPI" 3 1163 "0.6366197723675813"
C L "cos" 3 2 3 "FUNCTION"
F N "cos" 3 1171 ""
V L "x" 3 1171 "float" `701 
F G "cos" 3 1172 "float(float x)" `700 
V L "y" 3 1173 "float" `702 
V L "t" 3 1173 "float" `703 
V L "t2" 3 1173 "float" `704 
V L "quad" 3 1174 "int8" `705 
V L "i" 3 1174 "int8" `706 
V L "frac" 3 1175 "float" `707 
V L "p" 3 1176 "float[5]" `708  "by the series definition for cosine"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 2 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "sin" 3 2 5 "FUNCTION"
F N "sin" 3 1310 ""
V L "x" 3 1310 "float" `710 
F G "sin" 3 1311 "float(float x)" `709 
C L "tan" 3 2 5 "FUNCTION"
F N "tan" 3 1336 ""
V L "x" 3 1336 "float" `712 
F G "tan" 3 1337 "float(float x)" `711 
V L "c" 3 1338 "float" `713 
V L "s" 3 1338 "float" `714 
V G "pas" 3 1376 "[3]" `716 
V G "qas" 3 1377 "[3]" `719 
F N "ASIN_COS" 3 1379 ""
V L "x" 3 1379 "float" `722 
V L "n" 3 1379 "int8" `723 
F G "ASIN_COS" 3 1380 "float(float x,int8 n)" `721 
V L "y" 3 1381 "float" `724 
V L "res" 3 1381 "float" `725 
V L "r" 3 1381 "float" `726 
V L "y2" 3 1381 "float" `727 
V L "s" 3 1382 "int1" `728 
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "asin" 3 2 5 "FUNCTION"
F N "asin" 3 1537 ""
V L "x" 3 1537 "float" `730 
F G "asin" 3 1538 "float(float x)" `729 
V L "r" 3 1539 "float" `731 
C L "acos" 3 2 5 "FUNCTION"
F N "acos" 3 1571 ""
V L "x" 3 1571 "float" `733 
F G "acos" 3 1572 "float(float x)" `732 
V L "r" 3 1573 "float" `734 
V G "pat" 3 1599 "[4]" `736 
V G "qat" 3 1600 "[4]" `739 
C L "atan" 3 2 3 "FUNCTION"
F N "atan" 3 1608 ""
V L "x" 3 1608 "float" `742 
F G "atan" 3 1609 "float(float x)" `741 
V L "y" 3 1610 "float" `743 
V L "res" 3 1610 "float" `744 
V L "r" 3 1610 "float" `745 
V L "s" 3 1611 "int1" `746 
V L "flag" 3 1611 "int1" `747 
C L "atan" 3 2 1 "FUNCTION"
C L "atan2" 3 2 7 "FUNCTION"
F N "atan2" 3 1751 ""
V L "y" 3 1751 "float" `749 
V L "x" 3 1751 "float" `750 
F G "atan2" 3 1752 "float(float y,float x)" `748 
V L "z" 3 1753 "float" `751 
V L "sign" 3 1754 "int1" `752 
V L "quad" 3 1755 "int8" `753 
C L "atan2" 3 2 1 "FUNCTION"
C L "atan2" 3 2 1 "FUNCTION"
C L "cosh" 3 2 7 "FUNCTION"
F N "cosh" 3 1973 ""
V L "x" 3 1973 "float" `756 
F G "cosh" 3 1974 "float(float x)" `755 
C L "sinh" 3 2 6 "FUNCTION"
F N "sinh" 3 2000 ""
V L "x" 3 2000 "float" `758 
F G "sinh" 3 2001 "float(float x)" `757 
C L "tanh" 3 2 6 "FUNCTION"
F N "tanh" 3 2030 ""
V L "x" 3 2030 "float" `760 
F G "tanh" 3 2031 "float(float x)" `759 
D G "LOG2" 3 2060 ".30102999566398119521"
D G "LOG2_INV" 3 2061 "3.32192809488736234787"
F N "frexp" 3 2062 ""
V L "x" 3 2062 "float" `762 
V L "exp" 3 2062 "*sint8" `763 
F G "frexp" 3 2063 "float(float x,*sint8 exp)" `761 
V L "res" 3 2064 "float" `764 
V L "sign" 3 2065 "int1" `765 
C L "ldexp" 3 2 6 "FUNCTION"
F N "ldexp" 3 2207 ""
V L "value" 3 2207 "float" `767 
V L "exp" 3 2207 "sint8" `768 
F G "ldexp" 3 2208 "float(float value,sint8 exp)" `766 
V G "STKPTR" 4 20 "{{{int5 SP,int2 ,int1 STKOVF} ,int5 STKPTR,int1 ,int1 STKUNF,int1 STKFUL} STKPTR}" `786 
V G "TBLPTRU" 4 32 "{int5 TBLPTRU,int1 ACSS}" `793 
V G "INTCON" 4 73 "{{{int6 ,int1 GIEL,int1 GIEH} ,{int1 ,int1 INT0F,int1 T0IF,int1 ,int1 INT0E,int1 T0IE,int1 PEIE,int1 GIE} ,int1 RBIF,int1 INT0IF,int1 TMR0IF,int1 RBIE,int1 INT0IE,int1 TMR0IE,int1 PEIE_GIEL,int1 GIE_GIEH} INTCON}" `822 
V G "INTCON2" 4 85 "{int1 RBIP,int1 ,int1 TMR0IP,int1 ,int1 INTEDG2,int1 INTEDG1,int1 INTEDG0,int1 RBPU}" `832 
V G "INTCON3" 4 112 "{{{int1 INT1F,int1 INT2F,int1 ,int1 INT1E,int1 INT2E,int1 ,int1 INT1P,int1 INT2P} ,int1 INT1IF,int1 INT2IF,int1 ,int1 INT1IE,int1 INT2IE,int1 ,int1 INT1IP,int1 INT2IP} INTCON3}" `853 
V G "STATUS" 4 161 "{int1 c,int1 DC,int1 z,int1 OV,int1 n}" `880 
V G "T0CON" 4 184 "{{{int3 ,int1 T0PS3,int2 ,int1 T016BIT} ,int3 T0PS,int1 PSA,int1 T0SE,int1 T0CS,int1 T08BIT,int1 TMR0ON} T0CON}" `896 
V G "OSCCON" 4 202 "{{{int2 ,int1 FLTS} ,int2 SCS,int1 IOFS,int1 OSTS,int3 IRCF,int1 IDLEN} OSCCON}" `908 
V G "HLVDCON" 4 229 "{{{int4 HLVDL,int1 HLVDEN,int1 IVRST,int1 ,int1 VDIRMAG} ,{int4 LVDL,int1 LVDEN,int1 IRVST} ,int4 LVV,int1 ,int1 BGST} HLVDCON}" `926 
V G "WDTCON" 4 242 "{{{int1 SWDTE} ,int1 SWDTEN} WDTCON}" `933 
V G "RCON" 4 254 "{int1 BOR,int1 POR,int1 PD,int1 TO,int1 RI,int1 ,int1 SBOREN,int1 IPEN}" `943 
V G "T1CON" 4 267 "{int1 TMR1ON,int1 TMR1CS,int1 T1SYNC,int1 T1OSCEN,int2 T1CKPS,int1 T1RUN,int1 RD16}" `953 
V G "T2CON" 4 287 "{{{int3 ,int4 TOUTPS} ,int2 T2CKPS,int1 TMR2ON,int4 T2OUTPS} T2CON}" `965 
V G "SSPSTAT" 4 332 "{{{int2 ,int1 WRITE,int2 ,int1 address} ,{int2 ,int1 R_W,int2 ,int1 D_A} ,{int2 ,int1 W,int2 ,int1 A} ,int1 BF,int1 UA,int1 r,int1 s,int1 p,int1 D,int1 CKE,int1 SMP} SSPSTAT}" `996 
V G "SSPCON1" 4 341 "{int4 SSPM,int1 CKP,int1 SSPEN,int1 SSPOV,int1 WCOL}" `1003 
V G "SSPCON2" 4 362 "{{{int1 ,int5 ADMSK1} ,int1 SEN,int1 RSEN,int1 PEN,int1 RCEN,int1 ACKEN,int1 ACKDT,int1 ACKSTAT,int1 GCEN} SSPCON2}" `1018 
V G "ADCON0" 4 387 "{{{int1 ,int1 GO_DONE} ,{int1 ,int1 DONE} ,int1 ADON,int1 GO,int4 CHS} ADCON0}" `1033 
V G "ADCON1" 4 393 "{int4 PCFG,int2 VCFG}" `1037 
V G "ADCON2" 4 401 "{int3 ADCS,int3 ACQT,int1 ,int1 ADFM}" `1043 
V G "CCP1CON" 4 420 "{{{int4 ,int1 CCP1Y,int1 CCP1X} ,int4 CCP1M,int2 DC1B,int2 P1M} CCP1CON}" `1055 
V G "CCP2CON" 4 438 "{{{int4 ,int1 CCP2Y,int1 CCP2X} ,int4 CCP2M,int2 DC2B} CCP2CON}" `1066 
V G "BAUDCON" 4 461 "{{{int4 ,int1 SCKP,int1 ,int1 RCMT} ,int1 ABDEN,int1 WUE,int1 ,int1 BRG16,int1 TXCKP,int1 RXDTP,int1 RCIDL,int1 ABDOVF} BAUDCON}" `1083 
V G "PWM1CON" 4 467 "{int7 PDC,int1 PRSEN}" `1087 
V G "ECCP1AS" 4 475 "{int2 PSSBD,int2 PSSAC,int3 ECCPAS,int1 ECCPASE}" `1093 
V G "CVRCON" 4 484 "{int4 CVR,int1 CVRSS,int1 CVRR,int1 CVROE,int1 CVREN}" `1100 
V G "CMCON" 4 494 "{int3 CM,int1 CIS,int1 C1INV,int1 C2INV,int1 C1OUT,int1 C2OUT}" `1108 
V G "T3CON" 4 507 "{int1 TMR3ON,int1 TMR3CS,int1 T3SYNC,int1 T3CCP1,int2 T3CKPS,int1 T3CCP2,int1 RD16}" `1118 
V G "TXSTA" 4 527 "{int1 TX9D,int1 TRMT,int1 BRGH,int1 SENDB,int1 SYNC,int1 TXEN,int1 TX9,int1 CSRC}" `1132 
V G "RCSTA" 4 548 "{{{int3 ,int1 ADEN} ,int1 RX9D,int1 OERR,int1 FERR,int1 ADDEN,int1 CREN,int1 SREN,int1 RX9,int1 SPEN} RCSTA}" `1147 
V G "EECON1" 4 566 "{int1 RD,int1 WR,int1 WREN,int1 WRERR,int1 FREE,int1 ,int1 CFGS,int1 EEPGD}" `1160 
V G "IPR2" 4 587 "{{{int2 ,int1 LVDIP} ,int1 CCP2IP,int1 TMR3IP,int1 HLVDIP,int1 BCLIP,int1 EEIP,int1 ,int1 CMIP,int1 OSCFIP} IPR2}" `1175 
V G "PIR2" 4 608 "{{{int2 ,int1 LVDIF} ,int1 CCP2IF,int1 TMR3IF,int1 HLVDIF,int1 BCLIF,int1 EEIF,int1 ,int1 CMIF,int1 OSCFIF} PIR2}" `1190 
V G "PIE2" 4 629 "{{{int2 ,int1 LVDIE} ,int1 CCP2IE,int1 TMR3IE,int1 HLVDIE,int1 BCLIE,int1 EEIE,int1 ,int1 CMIE,int1 OSCFIE} PIE2}" `1205 
V G "IPR1" 4 641 "{int1 TMR1IP,int1 TMR2IP,int1 CCP1IP,int1 SSPIP,int1 TXIP,int1 RCIP,int1 ADIP,int1 PSPIP}" `1215 
V G "PIR1" 4 653 "{int1 TMR1IF,int1 TMR2IF,int1 CCP1IF,int1 SSPIF,int1 TXIF,int1 RCIF,int1 ADIF,int1 PSPIF}" `1225 
V G "PIE1" 4 665 "{int1 TMR1IE,int1 TMR2IE,int1 CCP1IE,int1 SSPIE,int1 TXIE,int1 RCIE,int1 ADIE,int1 PSPIE}" `1235 
V G "OSCTUNE" 4 673 "{int5 TUN,int1 ,int1 PLLEN,int1 INTSRC}" `1241 
V G "TRISE" 4 685 "{int1 TRISE0,int1 TRISE1,int1 TRISE2,int1 TRISE3,int1 TRISE4,int1 TRISE5,int1 TRISE6,int1 TRISE7}" `1251 
V G "TRISD" 4 697 "{int1 TRISD0,int1 TRISD1,int1 TRISD2,int1 TRISD3,int1 TRISD4,int1 TRISD5,int1 TRISD6,int1 TRISD7}" `1261 
V G "TRISC" 4 709 "{int1 TRISC0,int1 TRISC1,int1 TRISC2,int1 TRISC3,int1 TRISC4,int1 TRISC5,int1 TRISC6,int1 TRISC7}" `1271 
V G "TRISB" 4 721 "{int1 TRISB0,int1 TRISB1,int1 TRISB2,int1 TRISB3,int1 TRISB4,int1 TRISB5,int1 TRISB6,int1 TRISB7}" `1281 
V G "TRISA" 4 733 "{int1 TRISA0,int1 TRISA1,int1 TRISA2,int1 TRISA3,int1 TRISA4,int1 TRISA5,int1 TRISA6,int1 TRISA7}" `1291 
V G "LATE" 4 745 "{int1 LATE0,int1 LATE1,int1 LATE2,int1 LATE3,int1 LATE4,int1 LATE5,int1 LATE6,int1 LATE7}" `1301 
V G "LATD" 4 757 "{int1 LATD0,int1 LATD1,int1 LATD2,int1 LATD3,int1 LATD4,int1 LATD5,int1 LATD6,int1 LATD7}" `1311 
V G "LATC" 4 769 "{int1 LATC0,int1 LATC1,int1 LATC2,int1 LATC3,int1 LATC4,int1 LATC5,int1 LATC6,int1 LATC7}" `1321 
V G "LATB" 4 781 "{int1 LATB0,int1 LATB1,int1 LATB2,int1 LATB3,int1 LATB4,int1 LATB5,int1 LATB6,int1 LATB7}" `1331 
V G "LATA" 4 793 "{int1 LATA0,int1 LATA1,int1 LATA2,int1 LATA3,int1 LATA4,int1 LATA5,int1 LATA6,int1 LATA7}" `1341 
V G "PORTE" 4 805 "{int1 RE0,int1 RE1,int1 RE2,int1 RE3,int1 RE4,int1 RE5,int1 RE6,int1 RE7}" `1351 
V G "PORTD" 4 817 "{int1 RD0,int1 RD1,int1 RD2,int1 RD3,int1 RD4,int1 RD5,int1 RD6,int1 RD7}" `1361 
V G "PORTC" 4 829 "{int1 RC0,int1 RC1,int1 RC2,int1 RC3,int1 RC4,int1 RC5,int1 RC6,int1 RC7}" `1371 
V G "PORTB" 4 841 "{int1 RB0,int1 RB1,int1 RB2,int1 RB3,int1 RB4,int1 RB5,int1 RB6,int1 RB7}" `1381 
V G "PORTA" 4 853 "{int1 RA0,int1 RA1,int1 RA2,int1 RA3,int1 RA4,int1 RA5,int1 RA6,int1 RA7}" `1391 
D G "LCD_RS_PIN" 0 6 "PIN_D0"
D G "LCD_RW_PIN" 0 7 "PIN_D1"
D G "LCD_ENABLE_PIN" 0 8 "PIN_D2"
D G "LCD_DATA4" 0 9 "PIN_D3"
D G "LCD_DATA5" 0 10 "PIN_D4"
D G "LCD_DATA6" 0 11 "PIN_D5"
D G "LCD_DATA7" 0 12 "PIN_D6"
D G "__LCD_C__" 5 76 ""
T G "LCD_PIN_MAP" 5 90 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}" `1398  "this is to improve compatability with previous LCD drivers that accepted"
D G "lcd_output_enable" 5 112 "(x) output_bit(LCD_ENABLE_PIN, x)"
D G "lcd_enable_tris" 5 113 "()  output_drive(LCD_ENABLE_PIN)"
D G "lcd_output_rs" 5 120 "(x) output_bit(LCD_RS_PIN, x)"
D G "lcd_rs_tris" 5 121 "()  output_drive(LCD_RS_PIN)"
D G "lcd_output_rw" 5 128 "(x) output_bit(LCD_RW_PIN, x)"
D G "lcd_rw_tris" 5 129 "()  output_drive(LCD_RW_PIN)"
D G "LCD_TYPE" 5 179 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "LCD_LINE_TWO" 5 183 "0x40" "LCD RAM address for the second line"
D G "LCD_LINE_LENGTH" 5 187 "20"
F N "lcd_read_nibble" 5 190 ""
f G "lcd_read_nibble" 5 190 "int8()" `1399 
F N "lcd_read_byte" 5 192 ""
F G "lcd_read_byte" 5 193 "int8()" `1400 
V L "low" 5 194 "int8" `1401 
V L "high" 5 194 "int8" `1402 
F N "lcd_read_nibble" 5 239 ""
F G "lcd_read_nibble" 5 240 "int8()" `1399 
V L "n" 5 242 "int8" `1403 
C L "lcd_read_nibble" 5 2 1 "FUNCTION"
F N "lcd_send_nibble" 5 256 ""
V L "n" 5 256 "int8" `1405 
F G "lcd_send_nibble" 5 257 "void(int8 n)" `1404 
C L "lcd_send_nibble" 5 2 1 "FUNCTION"
F N "lcd_send_byte" 5 274 ""
V L "address" 5 274 "int8" `1407 
V L "n" 5 274 "int8" `1408 
F G "lcd_send_byte" 5 275 "void(int8 address,int8 n)" `1406 
F N "lcd_init" 5 299 ""
F G "lcd_init" 5 300 "void()" `1409 
V L "i" 5 301 "int8" `1410 
V L "LCD_INIT_STRING" 5 302 "int8[4]" `1411 
C L "lcd_init" 5 2 2 "FUNCTION"
F N "lcd_gotoxy" 5 345 ""
V L "x" 5 345 "int8" `1413 
V L "y" 5 345 "int8" `1414 
F G "lcd_gotoxy" 5 346 "void(int8 x,int8 y)" `1412 
V L "address" 5 347 "int8" `1415 
F N "lcd_putc" 5 363 ""
V L "c" 5 363 "int8" `1417 
F G "lcd_putc" 5 364 "void(int8 c)" `1416 
F N "lcd_getc" 5 406 ""
V L "x" 5 406 "int8" `1419 
V L "y" 5 406 "int8" `1420 
F G "lcd_getc" 5 407 "int8(int8 x,int8 y)" `1418 
V L "value" 5 408 "int8" `1421 
C L "lcd_getc" 5 2 1 "FUNCTION"
C L "lcd_set_cgram_char" 5 2 5 "FUNCTION"
F N "lcd_set_cgram_char" 5 424 ""
V L "which" 5 424 "int8" `1423 
V L "ptr" 5 424 "*int8" `1424 
F G "lcd_set_cgram_char" 5 425 "void(int8 which,*int8 ptr)" `1422 
V L "i" 5 426 "int8" `1425 
C L "lcd_set_cgram_char" 5 2 1 "FUNCTION"
F N "lcd_cursor_on" 5 443 ""
V L "on" 5 443 "int8" `1427 
F G "lcd_cursor_on" 5 444 "void(int8 on)" `1426 
C L "lcd_cursor_on" 5 2 1 "FUNCTION"
C L "lcd_cursor_on" 5 2 1 "FUNCTION"
D G "RTC_SCLK" 6 33 "PIN_C1"
D G "RTC_IO" 6 34 "PIN_C2"
D G "RTC_RST" 6 35 "PIN_C0"
F N "write_ds1302_byte" 6 39 ""
V L "cmd" 6 39 "int8" `1429 
F G "write_ds1302_byte" 6 39 "void(int8 cmd)" `1428 
V L "i" 6 40 "int8" `1430 
F N "write_ds1302" 6 49 ""
V L "cmd" 6 49 "int8" `1432 
V L "data" 6 49 "int8" `1433 
F G "write_ds1302" 6 49 "void(int8 cmd,int8 data)" `1431 
F N "read_ds1302" 6 57 ""
V L "cmd" 6 57 "int8" `1435 
F G "read_ds1302" 6 57 "int8(int8 cmd)" `1434 
V L "i" 6 58 "int8" `1436 
V L "data" 6 58 "int8" `1437 
F N "rtc_init" 6 78 ""
F G "rtc_init" 6 78 "void()" `1438 
V L "x" 6 79 "int8" `1439 
F N "get_bcd" 6 90 ""
V L "data" 6 90 "int8" `1441 
F G "get_bcd" 6 91 "int8(int8 data)" `1440 
V L "nibh" 6 92 "int8" `1442 
V L "nibl" 6 93 "int8" `1443 
F N "rm_bcd" 6 101 ""
V L "data" 6 101 "int8" `1448 
F G "rm_bcd" 6 102 "int8(int8 data)" `1447 
V L "i" 6 103 "int8" `1449 
F N "rtc_set_datetime" 6 112 ""
V L "day" 6 112 "int8" `1451 
V L "mth" 6 112 "int8" `1452 
V L "year" 6 112 "int8" `1453 
V L "dow" 6 112 "int8" `1454 
V L "hr" 6 112 "int8" `1455 
V L "min" 6 112 "int8" `1456 
F G "rtc_set_datetime" 6 112 "void(int8 day,int8 mth,int8 year,int8 dow,int8 hr,int8 min)" `1450 
F N "rtc_get_date" 6 123 ""
V L "day" 6 123 "int8" `1458 
V L "mth" 6 123 "int8" `1459 
V L "year" 6 123 "int8" `1460 
V L "dow" 6 123 "int8" `1461 
F G "rtc_get_date" 6 123 "void(int8 day,int8 mth,int8 year,int8 dow)" `1457 
F N "rtc_get_time" 6 130 ""
V L "hr" 6 130 "int8" `1463 
V L "min" 6 130 "int8" `1464 
V L "sec" 6 130 "int8" `1465 
F G "rtc_get_time" 6 130 "void(int8 hr,int8 min,int8 sec)" `1462 
F N "rtc_write_nvr" 6 136 ""
V L "address" 6 136 "int8" `1467 
V L "data" 6 136 "int8" `1468 
F G "rtc_write_nvr" 6 136 "void(int8 address,int8 data)" `1466 
F N "rtc_read_nvr" 6 140 ""
V L "address" 6 140 "int8" `1470 
F G "rtc_read_nvr" 6 140 "int8(int8 address)" `1469 
D G "__INPUT_C__" 7 57 ""
D G "_CTYPE" 8 12 ""
D G "islower" 8 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 8 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 8 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 8 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 8 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 8 19 "(x)  ((x)==' ')"
D G "isxdigit" 8 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 8 21 "(x)  ((x)<' ')"
D G "isprint" 8 22 "(x)  ((x)>=' ')"
D G "isgraph" 8 23 "(x)  ((x)>' ')"
D G "ispunct" 8 24 "(x)  (((x)>' ')&&!isalnum(x))"
D G "InputKbhit" 7 66 "()    kbhit()"
D G "InputPutc" 7 67 "(c)    putc(c)"
D G "InputGetc" 7 68 "()     getc()"
F N "gethex1" 7 71 ""
F G "gethex1" 7 71 "int8()" `1479 
V L "digit" 7 72 "int8" `1480 
F N "gethex" 7 84 ""
F G "gethex" 7 84 "int8()" `1481 
V L "lo" 7 85 "int8" `1482 
V L "hi" 7 85 "int8" `1483 
F N "get_string" 7 95 ""
V L "s" 7 95 "*int8" `1485 
V L "max" 7 95 "int8" `1486 
F G "get_string" 7 95 "void(*int8 s,int8 max)" `1484 
V L "len" 7 96 "int8" `1487 
V L "c" 7 97 "int8" `1488 
C L "get_string" 7 103 1 "FUNCTION"
D G "EEPROM_SDA" 9 39 "PIN_C4"
D G "EEPROM_SCL" 9 40 "PIN_C3"
D G "EEPROM_ADDRESS" 9 47 "BYTE"
D G "EEPROM_SIZE" 9 48 "256"
F N "init_ext_eeprom" 9 50 ""
F G "init_ext_eeprom" 9 50 "void()" `1489 
F N "ext_eeprom_ready" 9 55 ""
F G "ext_eeprom_ready" 9 55 "int8()" `1490 
V L "ack" 9 56 "int1" `1491 
C L "ext_eeprom_ready" 9 2 1 "FUNCTION"
C L "ext_eeprom_ready" 9 2 1 "FUNCTION"
F N "write_ext_eeprom" 9 63 ""
V L "address" 9 63 "int8" `1493 
V L "data" 9 63 "int8" `1494 
F G "write_ext_eeprom" 9 63 "void(int8 address,int8 data)" `1492 
F N "read_ext_eeprom" 9 73 ""
V L "address" 9 73 "int8" `1496 
F G "read_ext_eeprom" 9 73 "int8(int8 address)" `1495 
V L "data" 9 74 "int8" `1497 
V G "sifre" 0 23 "int8[131]" `1498 
V G "KARTUS" 0 25 "float" `1499 
V G "kesme" 0 27 "int8" `1501 
V G "i" 0 29 "int32" `1502 
V G "degisken2" 0 30 "int8" `1503 
V G "degisken3" 0 30 "int8" `1504 
V G "degisken4" 0 30 "int8" `1505 
V G "degisken5" 0 30 "int8" `1506 
V G "degisken6" 0 30 "int8" `1507 
V G "degisken7" 0 30 "int8" `1508 
V G "degisken8" 0 30 "int8" `1509 
V G "coz" 0 31 "int8" `1510 
V G "flag" 0 31 "int8" `1511 
V G "key" 0 31 "int8" `1512 
V G "h0" 0 32 "int8" `1513 
V G "h1" 0 32 "int8" `1514 
V G "h2" 0 32 "int8" `1515 
V G "h3" 0 32 "int8" `1516 
V G "h4" 0 32 "int8" `1517 
V G "h5" 0 32 "int8" `1518 
V G "h6" 0 32 "int8" `1519 
V G "h7" 0 32 "int8" `1520 
V G "h8" 0 32 "int8" `1521 
V G "h9" 0 32 "int8" `1522 
V G "h10" 0 32 "int8" `1523 
V G "h11" 0 32 "int8" `1524 
V G "h12" 0 32 "int8" `1525 
V G "h13" 0 32 "int8" `1526 
V G "h14" 0 32 "int8" `1527 
V G "h15" 0 32 "int8" `1528 
V G "h16" 0 32 "int8" `1529 
V G "h17" 0 32 "int8" `1530 
V G "h18" 0 32 "int8" `1531 
V G "h19" 0 32 "int8" `1532 
V G "h20" 0 32 "int8" `1533 
V G "h21" 0 32 "int8" `1534 
V G "h22" 0 32 "int8" `1535 
V G "h23" 0 32 "int8" `1536 
V G "h24" 0 32 "int8" `1537 
V G "h25" 0 32 "int8" `1538 
V G "h26" 0 32 "int8" `1539 
V G "h27" 0 32 "int8" `1540 
V G "h28" 0 32 "int8" `1541 
V G "h29" 0 32 "int8" `1542 
V G "h30" 0 32 "int8" `1543 
V G "h31" 0 32 "int8" `1544 
V G "h32" 0 33 "int8" `1545 
V G "h33" 0 33 "int8" `1546 
V G "h34" 0 33 "int8" `1547 
V G "h35" 0 33 "int8" `1548 
V G "h36" 0 33 "int8" `1549 
V G "h37" 0 33 "int8" `1550 
V G "h38" 0 33 "int8" `1551 
V G "h39" 0 33 "int8" `1552 
V G "h40" 0 33 "int8" `1553 
V G "h41" 0 33 "int8" `1554 
V G "h42" 0 33 "int8" `1555 
V G "h43" 0 33 "int8" `1556 
V G "h44" 0 33 "int8" `1557 
V G "h45" 0 33 "int8" `1558 
V G "h46" 0 33 "int8" `1559 
V G "h47" 0 33 "int8" `1560 
V G "h48" 0 33 "int8" `1561 
V G "h49" 0 33 "int8" `1562 
V G "h50" 0 33 "int8" `1563 
V G "h51" 0 33 "int8" `1564 
V G "h52" 0 33 "int8" `1565 
V G "h53" 0 33 "int8" `1566 
V G "h54" 0 33 "int8" `1567 
V G "h55" 0 33 "int8" `1568 
V G "h56" 0 33 "int8" `1569 
V G "h57" 0 33 "int8" `1570 
V G "h58" 0 33 "int8" `1571 
V G "h59" 0 33 "int8" `1572 
V G "h60" 0 33 "int8" `1573 
V G "h61" 0 33 "int8" `1574 
V G "h62" 0 33 "int8" `1575 
V G "h63" 0 34 "int8" `1576 
V G "h64" 0 34 "int8" `1577 
V G "h65" 0 34 "int8" `1578 
V G "h66" 0 34 "int8" `1579 
V G "h67" 0 34 "int8" `1580 
V G "h68" 0 34 "int8" `1581 
V G "h69" 0 34 "int8" `1582 
V G "h70" 0 34 "int8" `1583 
V G "h71" 0 34 "int8" `1584 
V G "h72" 0 34 "int8" `1585 
V G "h73" 0 34 "int8" `1586 
V G "h74" 0 34 "int8" `1587 
V G "h75" 0 34 "int8" `1588 
V G "h76" 0 34 "int8" `1589 
V G "h77" 0 34 "int8" `1590 
V G "h78" 0 34 "int8" `1591 
V G "h79" 0 34 "int8" `1592 
V G "h80" 0 34 "int8" `1593 
V G "h81" 0 34 "int8" `1594 
V G "h82" 0 34 "int8" `1595 
V G "h83" 0 34 "int8" `1596 
V G "h84" 0 34 "int8" `1597 
V G "h85" 0 34 "int8" `1598 
V G "h86" 0 34 "int8" `1599 
V G "h87" 0 34 "int8" `1600 
V G "h88" 0 34 "int8" `1601 
V G "h89" 0 34 "int8" `1602 
V G "h90" 0 35 "int8" `1603 
V G "h91" 0 35 "int8" `1604 
V G "h92" 0 35 "int8" `1605 
V G "h93" 0 35 "int8" `1606 
V G "h94" 0 35 "int8" `1607 
V G "h95" 0 35 "int8" `1608 
V G "h96" 0 35 "int8" `1609 
V G "h97" 0 35 "int8" `1610 
V G "h98" 0 35 "int8" `1611 
V G "h99" 0 35 "int8" `1612 
V G "h100" 0 35 "int8" `1613 
V G "h101" 0 35 "int8" `1614 
V G "h102" 0 35 "int8" `1615 
V G "h103" 0 35 "int8" `1616 
V G "h104" 0 35 "int8" `1617 
V G "h105" 0 35 "int8" `1618 
V G "h106" 0 35 "int8" `1619 
V G "h107" 0 35 "int8" `1620 
V G "h108" 0 35 "int8" `1621 
V G "h109" 0 35 "int8" `1622 
V G "h110" 0 35 "int8" `1623 
V G "h111" 0 35 "int8" `1624 
V G "h112" 0 35 "int8" `1625 
V G "h113" 0 35 "int8" `1626 
V G "h114" 0 36 "int8" `1627 
V G "h115" 0 36 "int8" `1628 
V G "h116" 0 36 "int8" `1629 
V G "h117" 0 36 "int8" `1630 
V G "h118" 0 36 "int8" `1631 
V G "h119" 0 36 "int8" `1632 
V G "h120" 0 36 "int8" `1633 
V G "h121" 0 36 "int8" `1634 
V G "h122" 0 36 "int8" `1635 
V G "h123" 0 36 "int8" `1636 
V G "h124" 0 36 "int8" `1637 
V G "h125" 0 36 "int8" `1638 
V G "h126" 0 36 "int8" `1639 
V G "h127" 0 36 "int8" `1640 
V G "h128" 0 36 "int8" `1641 
V G "h129" 0 36 "int8" `1642 
V G "h130" 0 36 "int8" `1643 
V G "ptesibassaat1" 0 37 "int8" `1644 
V G "ptesibasdk1" 0 37 "int8" `1645 
V G "ptesibitsaat1" 0 37 "int8" `1646 
V G "ptesibitdk1" 0 37 "int8" `1647 
V G "ptesibassaat2" 0 37 "int8" `1648 
V G "ptesibasdk2" 0 37 "int8" `1649 
V G "ptesibitsaat2" 0 37 "int8" `1650 
V G "ptesibitdk2" 0 37 "int8" `1651 
V G "salibassaat1" 0 38 "int8" `1652 
V G "salibasdk1" 0 38 "int8" `1653 
V G "salibitsaat1" 0 38 "int8" `1654 
V G "salibitdk1" 0 38 "int8" `1655 
V G "salibassaat2" 0 38 "int8" `1656 
V G "salibasdk2" 0 38 "int8" `1657 
V G "salibitsaat2" 0 38 "int8" `1658 
V G "salibitdk2" 0 38 "int8" `1659 
V G "carbassaat1" 0 39 "int8" `1660 
V G "carbasdk1" 0 39 "int8" `1661 
V G "carbitsaat1" 0 39 "int8" `1662 
V G "carbitdk1" 0 39 "int8" `1663 
V G "carbassaat2" 0 39 "int8" `1664 
V G "carbasdk2" 0 39 "int8" `1665 
V G "carbitsaat2" 0 39 "int8" `1666 
V G "carbitdk2" 0 39 "int8" `1667 
V G "perbassaat1" 0 40 "int8" `1668 
V G "perbasdk1" 0 40 "int8" `1669 
V G "perbitsaat1" 0 40 "int8" `1670 
V G "perbitdk1" 0 40 "int8" `1671 
V G "perbassaat2" 0 40 "int8" `1672 
V G "perbasdk2" 0 40 "int8" `1673 
V G "perbitsaat2" 0 40 "int8" `1674 
V G "perbitdk2" 0 40 "int8" `1675 
V G "cumabassaat1" 0 41 "int8" `1676 
V G "cumabasdk1" 0 41 "int8" `1677 
V G "cumabitsaat1" 0 41 "int8" `1678 
V G "cumabitdk1" 0 41 "int8" `1679 
V G "cumabassaat2" 0 41 "int8" `1680 
V G "cumabasdk2" 0 41 "int8" `1681 
V G "cumabitsaat2" 0 41 "int8" `1682 
V G "cumabitdk2" 0 41 "int8" `1683 
V G "ctesibassaat1" 0 42 "int8" `1684 
V G "ctesibasdk1" 0 42 "int8" `1685 
V G "ctesibitsaat1" 0 42 "int8" `1686 
V G "ctesibitdk1" 0 42 "int8" `1687 
V G "ctesibassaat2" 0 42 "int8" `1688 
V G "ctesibasdk2" 0 42 "int8" `1689 
V G "ctesibitsaat2" 0 42 "int8" `1690 
V G "ctesibitdk2" 0 42 "int8" `1691 
V G "pazarbassaat1" 0 43 "int8" `1692 
V G "pazarbasdk1" 0 43 "int8" `1693 
V G "pazarbitsaat1" 0 43 "int8" `1694 
V G "pazarbitdk1" 0 43 "int8" `1695 
V G "pazarbassaat2" 0 43 "int8" `1696 
V G "pazarbasdk2" 0 43 "int8" `1697 
V G "pazarbitsaat2" 0 43 "int8" `1698 
V G "pazarbitdk2" 0 43 "int8" `1699 
V G "bugunsaat" 0 43 "int8" `1700 
V G "bugundk" 0 43 "int8" `1701 
V G "day" 0 43 "int8" `1702 
F N "gunal" 0 44 ""
f G "gunal" 0 44 "void()" `1703 
F N "bugun" 0 44 ""
f G "bugun" 0 44 "void()" `1704 
F N "sifrecoz" 0 45 ""
V L "c" 0 45 "int8" `1706 
f G "sifrecoz" 0 45 "int8(int8 c)" `1705 
F N "saatcevir" 0 46 ""
f G "saatcevir" 0 46 "void()" `1707 
F N "tanimla" 0 47 ""
f G "tanimla" 0 47 "void()" `1708 
F N "pazartesi1" 0 48 ""
f G "pazartesi1" 0 48 "void()" `1709 
F N "sali1" 0 48 ""
f G "sali1" 0 48 "void()" `1710 
F N "carsamba1" 0 48 ""
f G "carsamba1" 0 48 "void()" `1711 
F N "persembe1" 0 48 ""
f G "persembe1" 0 48 "void()" `1712 
F N "cuma1" 0 49 ""
f G "cuma1" 0 49 "void()" `1713 
F N "cumartesi1" 0 49 ""
f G "cumartesi1" 0 49 "void()" `1714 
F N "pazar1" 0 49 ""
f G "pazar1" 0 49 "void()" `1715 
F N "pazartesi2" 0 50 ""
f G "pazartesi2" 0 50 "void()" `1716 
F N "sali2" 0 50 ""
f G "sali2" 0 50 "void()" `1717 
F N "carsamba2" 0 50 ""
f G "carsamba2" 0 50 "void()" `1718 
F N "persembe2" 0 50 ""
f G "persembe2" 0 50 "void()" `1719 
F N "cuma2" 0 51 ""
f G "cuma2" 0 51 "void()" `1720 
F N "cumartesi2" 0 51 ""
f G "cumartesi2" 0 51 "void()" `1721 
F N "pazar2" 0 51 ""
f G "pazar2" 0 51 "void()" `1722 
F N "ortalama" 0 52 ""
f G "ortalama" 0 52 "void()" `1723 
F N "gunkontrol" 0 53 ""
f G "gunkontrol" 0 53 "void()" `1724 
F N "toplama" 0 54 ""
f G "toplama" 0 54 "void()" `1725 
F N "calistir" 0 55 ""
f G "calistir" 0 55 "void()" `1726 
F N "sifirla" 0 56 ""
V L "gn" 0 56 "int8" `1728 
f G "sifirla" 0 56 "void(int8 gn)" `1727 
F N "farkal" 0 57 ""
V L "dk" 0 57 "int8" `1730 
f G "farkal" 0 57 "int8(int8 dk)" `1729 
F N "bekleme" 0 58 ""
f G "bekleme" 0 58 "void()" `1731 
F N "calis" 0 59 ""
f G "calis" 0 59 "void()" `1732 
F N "ata" 0 60 ""
V L "t" 0 60 "int8" `1734 
f G "ata" 0 60 "void(int8 t)" `1733 
F N "eeprom" 0 61 ""
f G "eeprom" 0 61 "void()" `1735 
F N "pazartesi_test" 0 62 ""
f G "pazartesi_test" 0 62 "void()" `1736 
F N "sali_test" 0 63 ""
f G "sali_test" 0 63 "void()" `1737 
F N "carsamba_test" 0 64 ""
f G "carsamba_test" 0 64 "void()" `1738 
F N "persembe_test" 0 65 ""
f G "persembe_test" 0 65 "void()" `1739 
F N "cuma_test" 0 66 ""
f G "cuma_test" 0 66 "void()" `1740 
F N "cumartesi_test" 0 67 ""
f G "cumartesi_test" 0 67 "void()" `1741 
F N "pazar_test" 0 68 ""
f G "pazar_test" 0 68 "void()" `1742 
V G "ptesisaat" 0 69 "sint32" `1743 
V G "ptesidk" 0 69 "sint32" `1744 
V G "salisaat" 0 69 "sint32" `1745 
V G "salidk" 0 69 "sint32" `1746 
V G "carsaat" 0 69 "sint32" `1747 
V G "cardk" 0 69 "sint32" `1748 
V G "persaat" 0 69 "sint32" `1749 
V G "perdk" 0 69 "sint32" `1750 
V G "cumasaat" 0 69 "sint32" `1751 
V G "cumadk" 0 69 "sint32" `1752 
V G "ctesisaat" 0 69 "sint32" `1753 
V G "ctesidk" 0 69 "sint32" `1754 
V G "pazarsaat" 0 69 "sint32" `1755 
V G "pazardk" 0 69 "sint32" `1756 
V G "ptesisaat2" 0 70 "sint32" `1757 
V G "ptesidk2" 0 70 "sint32" `1758 
V G "salisaat2" 0 70 "sint32" `1759 
V G "salidk2" 0 70 "sint32" `1760 
V G "carsaat2" 0 70 "sint32" `1761 
V G "cardk2" 0 70 "sint32" `1762 
V G "persaat2" 0 70 "sint32" `1763 
V G "perdk2" 0 70 "sint32" `1764 
V G "cumasaat2" 0 70 "sint32" `1765 
V G "cumadk2" 0 70 "sint32" `1766 
V G "ctesisaat2" 0 70 "sint32" `1767 
V G "ctesidk2" 0 70 "sint32" `1768 
V G "pazarsaat2" 0 70 "sint32" `1769 
V G "pazardk2" 0 70 "sint32" `1770 
V G "toplamsn" 0 71 "sint32" `1771 
V G "toplamdk" 0 71 "sint32" `1772 
V G "ptesitoplamdk" 0 72 "sint32" `1773 
V G "salitoplamdk" 0 72 "sint32" `1774 
V G "cartoplamdk" 0 72 "sint32" `1775 
V G "pertoplamdk" 0 72 "sint32" `1776 
V G "cumatoplamdk" 0 72 "sint32" `1777 
V G "ctesitoplamdk" 0 72 "sint32" `1778 
V G "pazartoplamdk" 0 72 "sint32" `1779 
V G "ptesitoplamdk2" 0 73 "sint32" `1780 
V G "salitoplamdk2" 0 73 "sint32" `1781 
V G "cartoplamdk2" 0 73 "sint32" `1782 
V G "pertoplamdk2" 0 73 "sint32" `1783 
V G "cumatoplamdk2" 0 73 "sint32" `1784 
V G "ctesitoplamdk2" 0 73 "sint32" `1785 
V G "pazartoplamdk2" 0 73 "sint32" `1786 
V G "tetik" 0 74 "float" `1787 
V G "bekle" 0 74 "float" `1788 
V G "oran" 0 74 "float" `1789 
V G "pasifsn" 0 74 "float" `1790 
V G "sn1" 0 75 "int32" `1791 
V G "sn3" 0 75 "int32" `1792 
V G "sayi" 0 76 "int32" `1793 
C L "pazar_test" 0 25 1 "FUNCTION"
V G "zet" 0 78 "int8" `1794 
F N "run1" 0 79 ""
f G "run1" 0 79 "void()" `1795 
F N "run2" 0 79 ""
f G "run2" 0 79 "void()" `1796 
V G "s1" 0 80 "int16" `1797 
V G "s2" 0 80 "int16" `1798 
V G "s3" 0 80 "int16" `1799 
V G "s4" 0 80 "int16" `1800 
V G "s5" 0 80 "int16" `1801 
V G "eeprom_hazir" 0 81 "int1" `1802 
V G "eeprom_test" 0 82 "int8" `1803 
V G "saniye" 0 85 "int8" `1804 
V G "dakika" 0 85 "int8" `1805 
V G "saat" 0 85 "int8" `1806 
V G "gun" 0 85 "int8" `1807 
V G "ay" 0 85 "int8" `1808 
V G "yil" 0 85 "int8" `1809 
V G "haftanin_gunu" 0 85 "int8" `1810 
V G "degisken" 0 86 "int8" `1811 
V G "son" 0 88 "int8" `1812 
V G "anliktmr" 0 88 "int8" `1813 
D G "settmr" 0 89 "7"
F N "timer0_kesmesi" 0 92 ""
F G "timer0_kesmesi" 0 93 "void()" `1814 
F N "serihaberlesme" 0 117 ""
F G "serihaberlesme" 0 118 "void()" `1815 
F N "MAIN" 0 134 ""
F G "MAIN" 0 135 "void()" `1816  "setup_psp(PSP_DISABLED);"
C L "MAIN" 0 25 1 "FUNCTION"
C L "MAIN" 0 25 2 "FUNCTION"
C L "MAIN" 0 25 1 "FUNCTION"
C L "MAIN" 0 25 1 "FUNCTION"
C L "MAIN" 0 25 1 "FUNCTION"
C L "MAIN" 0 25 1 "FUNCTION"
C L "MAIN" 0 25 1 "FUNCTION"
C L "MAIN" 0 25 1 "FUNCTION"
C L "MAIN" 0 25 1 "FUNCTION"
C L "MAIN" 0 218 1 "*"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 218 1 "FUNCTION"
C L "MAIN" 0 407 1 "*"
C L "MAIN" 0 407 1 "FUNCTION"
C L "MAIN" 0 407 1 "FUNCTION"
C L "MAIN" 0 407 1 "FUNCTION"
C L "MAIN" 0 407 1 "FUNCTION"
C L "MAIN" 0 407 1 "FUNCTION"
C L "MAIN" 0 407 1 "FUNCTION"
C L "MAIN" 0 407 1 "FUNCTION"
C L "MAIN" 0 407 1 "FUNCTION"
C L "MAIN" 0 595 1 "*"
C L "MAIN" 0 595 1 "FUNCTION"
C L "MAIN" 0 595 1 "FUNCTION"
C L "MAIN" 0 595 1 "FUNCTION"
C L "MAIN" 0 595 1 "FUNCTION"
C L "MAIN" 0 595 1 "FUNCTION"
C L "MAIN" 0 595 1 "FUNCTION"
C L "MAIN" 0 595 1 "FUNCTION"
C L "MAIN" 0 595 1 "FUNCTION"
C L "MAIN" 0 780 1 "*"
C L "MAIN" 0 780 1 "FUNCTION"
C L "MAIN" 0 780 1 "FUNCTION"
C L "MAIN" 0 780 1 "FUNCTION"
C L "MAIN" 0 780 1 "FUNCTION"
C L "MAIN" 0 960 1 "*"
C L "MAIN" 0 960 1 "FUNCTION"
C L "MAIN" 0 960 1 "FUNCTION"
C L "MAIN" 0 960 1 "FUNCTION"
C L "MAIN" 0 960 1 "FUNCTION"
C L "MAIN" 0 1136 1 "*"
C L "MAIN" 0 1136 1 "FUNCTION"
C L "MAIN" 0 1136 1 "FUNCTION"
C L "MAIN" 0 1136 1 "FUNCTION"
C L "MAIN" 0 1136 1 "FUNCTION"
C L "MAIN" 0 1316 1 "*"
C L "MAIN" 0 1316 1 "FUNCTION"
C L "MAIN" 0 1316 1 "FUNCTION"
C L "MAIN" 0 1316 1 "FUNCTION"
C L "MAIN" 0 1316 1 "FUNCTION"
C L "MAIN" 0 1316 1 "FUNCTION"
C L "tanimla" 0 1316 1 "FUNCTION"
C L "tanimla" 0 1504 1 "*"
F N "tanimla" 0 1505 ""
F G "tanimla" 0 1506 "void()" `1708 
C L "tanimla" 0 1523 1 "*"
C L "tanimla" 0 1523 1 "FUNCTION"
C L "pazartesi1" 0 1528 1 "*"
F N "pazartesi1" 0 1529 ""
F G "pazartesi1" 0 1530 "void()" `1709 
C L "pazartesi2" 0 1544 1 "*"
F N "pazartesi2" 0 1545 ""
F G "pazartesi2" 0 1546 "void()" `1716 
C L "sali1" 0 1560 1 "*"
F N "sali1" 0 1561 ""
F G "sali1" 0 1562 "void()" `1710 
C L "sali2" 0 1576 1 "*"
F N "sali2" 0 1577 ""
F G "sali2" 0 1578 "void()" `1717 
C L "carsamba1" 0 1592 1 "*"
F N "carsamba1" 0 1593 ""
F G "carsamba1" 0 1594 "void()" `1711 
C L "carsamba2" 0 1608 1 "*"
F N "carsamba2" 0 1609 ""
F G "carsamba2" 0 1610 "void()" `1718 
C L "persembe1" 0 1624 1 "*"
F N "persembe1" 0 1625 ""
F G "persembe1" 0 1626 "void()" `1712 
C L "persembe2" 0 1640 1 "*"
F N "persembe2" 0 1641 ""
F G "persembe2" 0 1642 "void()" `1719 
C L "cuma1" 0 1656 1 "*"
F N "cuma1" 0 1657 ""
F G "cuma1" 0 1658 "void()" `1713 
C L "cuma2" 0 1672 1 "*"
F N "cuma2" 0 1673 ""
F G "cuma2" 0 1674 "void()" `1720 
C L "cumartesi1" 0 1688 1 "*"
F N "cumartesi1" 0 1689 ""
F G "cumartesi1" 0 1690 "void()" `1714 
C L "cumartesi2" 0 1704 1 "*"
F N "cumartesi2" 0 1706 ""
F G "cumartesi2" 0 1707 "void()" `1721 
C L "pazar1" 0 1721 1 "*"
F N "pazar1" 0 1723 ""
F G "pazar1" 0 1724 "void()" `1715 
C L "pazar2" 0 1738 1 "*"
F N "pazar2" 0 1740 ""
F G "pazar2" 0 1741 "void()" `1722 
C L "bugun" 0 1755 1 "*"
F N "bugun" 0 1756 ""
F G "bugun" 0 1757 "void()" `1704 
C L "toplama" 0 1763 1 "*"
F N "toplama" 0 1765 ""
F G "toplama" 0 1766 "void()" `1725  "******************************* PAZARTESI 1 GUNU TOPLAM DK************************************"
C L "toplama" 0 1763 1 "FUNCTION"
C L "toplama" 0 1763 1 "FUNCTION"
C L "toplama" 0 1763 1 "FUNCTION"
C L "toplama" 0 1763 1 "FUNCTION"
C L "toplama" 0 1779 1 "*"
C L "toplama" 0 1779 1 "FUNCTION"
C L "toplama" 0 1779 1 "FUNCTION"
C L "toplama" 0 1779 1 "FUNCTION"
C L "toplama" 0 1779 1 "FUNCTION"
C L "toplama" 0 1792 1 "*"
C L "toplama" 0 1792 1 "FUNCTION"
C L "toplama" 0 1792 1 "FUNCTION"
C L "toplama" 0 1805 1 "*"
C L "toplama" 0 1805 1 "FUNCTION"
C L "toplama" 0 1805 1 "FUNCTION"
C L "toplama" 0 1818 1 "*"
C L "toplama" 0 1818 1 "FUNCTION"
C L "toplama" 0 1818 1 "FUNCTION"
C L "toplama" 0 1830 1 "*"
C L "toplama" 0 1830 1 "FUNCTION"
C L "toplama" 0 1830 1 "FUNCTION"
C L "toplama" 0 1842 1 "*"
C L "toplama" 0 1842 1 "FUNCTION"
C L "toplama" 0 1842 1 "FUNCTION"
C L "toplama" 0 1855 1 "*"
C L "toplama" 0 1855 1 "FUNCTION"
C L "toplama" 0 1855 1 "FUNCTION"
C L "toplama" 0 1868 1 "*"
C L "toplama" 0 1868 1 "FUNCTION"
C L "toplama" 0 1868 1 "FUNCTION"
C L "toplama" 0 1880 1 "*"
C L "toplama" 0 1880 1 "FUNCTION"
C L "toplama" 0 1880 1 "FUNCTION"
C L "toplama" 0 1893 1 "*"
C L "toplama" 0 1893 1 "FUNCTION"
C L "toplama" 0 1893 1 "FUNCTION"
C L "toplama" 0 1905 1 "*"
C L "toplama" 0 1905 1 "FUNCTION"
C L "toplama" 0 1905 1 "FUNCTION"
C L "toplama" 0 1919 1 "*"
C L "toplama" 0 1919 1 "FUNCTION"
C L "toplama" 0 1919 1 "FUNCTION"
C L "toplama" 0 1932 1 "*"
C L "toplama" 0 1932 1 "FUNCTION"
C L "toplama" 0 1932 1 "FUNCTION"
C L "toplama" 0 1932 1 "FUNCTION"
C L "toplama" 0 1932 1 "FUNCTION"
C L "toplama" 0 1932 1 "FUNCTION"
C L "toplama" 0 1932 1 "FUNCTION"
C L "toplama" 0 1932 1 "FUNCTION"
C L "toplama" 0 1932 1 "FUNCTION"
C L "toplama" 0 1932 1 "FUNCTION"
C L "toplama" 0 1932 2 "FUNCTION"
C L "toplama" 0 1932 2 "FUNCTION"
F N "sifrecoz" 0 1959 ""
V L "harf" 0 1959 "int8" `1862 
F G "sifrecoz" 0 1960 "int8(int8 harf)" `1705 
F N "sifirla" 0 2006 ""
V L "gn" 0 2006 "int8" `1862 
F G "sifirla" 0 2007 "void(int8 gn)" `1727 
F N "ata" 0 2059 ""
V L "t" 0 2059 "int8" `1862 
F G "ata" 0 2060 "void(int8 t)" `1733 
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
C L "ata" 0 1932 1 "FUNCTION"
F N "eeprom" 0 2213 ""
F G "eeprom" 0 2214 "void()" `1735 
C L "eeprom" 0 1932 1 "FUNCTION"
F N "pazartesi_test" 0 2230 ""
F G "pazartesi_test" 0 2231 "void()" `1736 
C L "pazartesi_test" 0 1932 1 "FUNCTION"
F N "sali_test" 0 2263 ""
F G "sali_test" 0 2264 "void()" `1737 
F N "carsamba_test" 0 2294 ""
F G "carsamba_test" 0 2295 "void()" `1738 
F N "persembe_test" 0 2324 ""
F G "persembe_test" 0 2325 "void()" `1739 
F N "cuma_test" 0 2355 ""
F G "cuma_test" 0 2356 "void()" `1740 
F N "cumartesi_test" 0 2385 ""
F G "cumartesi_test" 0 2386 "void()" `1741 
F N "pazar_test" 0 2416 ""
F G "pazar_test" 0 2417 "void()" `1742 
F N "calistir" 0 2447 ""
F G "calistir" 0 2448 "void()" `1726  "enable_interrupts(int_rda);"
C L "calistir" 0 1932 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "set_analog_pins" 1 2
F B "get_capture" 0 1
F B "set_compare_time" 1 2
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "pll_locked" 0 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 2
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 2
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "i2c_transfer" 3 6
F B "i2c_transfer_out" 3 4
F B "i2c_transfer_in" 3 4
F B "i2c_init" 1 2
F B "i2c_poll" 0 1
F B "i2c_speed" 1 2
